15-04-2020 14:12:23.971 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 7856 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 14:12:24.080 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 14:12:24.961 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 14:12:24.963 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 14:12:34.889 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 14:12:35.345 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 408ms. Found 17 repository interfaces.
15-04-2020 14:12:36.813 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$947d0b5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:36.938 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2d2ad394] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:36.966 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:36.971 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1dfba807' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:36.974 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$51ff7646] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:37.004 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$77548e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:37.011 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:37.029 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:37.084 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$13fd588c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 14:12:39.424 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 14:12:39.549 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 14:12:39.550 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 14:12:39.603 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;.]
15-04-2020 14:12:40.048 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 14:12:40.051 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 15055 ms
15-04-2020 14:12:42.853 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 14:12:43.459 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
15-04-2020 14:12:43.978 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 14:12:44.379 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 14:12:44.383 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 14:12:45.296 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 14:12:45.915 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 14:12:49.498 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 14:12:51.945 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 14:12:53.069 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 14:12:55.419 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 14:12:57.539 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 14:12:57.823 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11ad5f27, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ccca115, org.springframework.security.web.header.HeaderWriterFilter@35f224c3, org.springframework.web.filter.CorsFilter@2fcc41c2, org.springframework.security.web.authentication.logout.LogoutFilter@4177e962, com.aroha.pet.security.JwtAuthenticationFilter@5148d231, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@656bbeb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@589e39c6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24c72a07, org.springframework.security.web.session.SessionManagementFilter@46dae50c, org.springframework.security.web.access.ExceptionTranslationFilter@5b3b6062, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a32247b]
15-04-2020 14:12:58.389 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 14:13:00.169 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 14:13:00.241 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 14:13:00.367 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 14:13:01.178 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 14:13:01.185 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 14:13:01.201 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 14:13:01.207 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 14:13:01.224 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 14:13:01.227 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 14:13:01.232 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 14:13:01.540 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 14:13:01.547 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 40.155 seconds (JVM running for 41.802)
15-04-2020 14:13:14.596 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 14:13:14.596 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 14:13:14.647 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 51 ms
15-04-2020 14:13:15.028 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
15-04-2020 14:13:16.365 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 14:13:16.440 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:17.592 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 14:13:17.596 [http-nio-8080-exec-3] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
15-04-2020 14:13:17.678 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:17.681 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:18.238 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:18.243 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:18.383 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        users a,
        user_roles b,
        roles c 
    where
        a.id = b.user_id 
        and b.role_id = c.id 
        and c.name = ?
15-04-2020 14:13:21.005 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:21.005 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:21.007 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:21.009 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:21.013 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:21.016 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:21.031 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:13:21.032 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:13:21.096 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:13:21.098 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:21.189 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:21.199 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity  
    FROM
        users u 
    LEFT JOIN
        query_info q 
            ON u.id=q.created_by   
    left join
        user_roles r 
            on u.id=r.user_id 
    WHERE
        r.role_id=1  
    GROUP BY
        u.id,
        DAY(q.created_at)  
    having
        count(distinct q.scenario)>0;
15-04-2020 14:13:23.880 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:23.882 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:23.902 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 14:13:26.265 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:26.268 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:26.278 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 14:13:26.315 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 14:13:44.629 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:44.632 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:13:44.671 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 14:13:44.685 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:13:44.694 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 14:13:44.697 [http-nio-8080-exec-9] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 14:13:44.717 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 14:13:44.855 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 14:14:27.094 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:27.094 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:27.095 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:27.096 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:27.099 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:27.101 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:27.102 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:27.106 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:27.119 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:27.127 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity  
    FROM
        users u 
    LEFT JOIN
        query_info q 
            ON u.id=q.created_by   
    left join
        user_roles r 
            on u.id=r.user_id 
    WHERE
        r.role_id=1  
    GROUP BY
        u.id,
        DAY(q.created_at)  
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:27.131 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:27.136 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:28.939 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:28.942 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:28.948 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 14:14:33.845 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:33.852 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:33.858 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:33.860 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:33.870 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:33.895 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:33.899 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:33.904 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:33.911 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity  
    FROM
        users u 
    LEFT JOIN
        query_info q 
            ON u.id=q.created_by   
    left join
        user_roles r 
            on u.id=r.user_id 
    WHERE
        r.role_id=1  
    GROUP BY
        u.id,
        DAY(q.created_at)  
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:33.934 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:33.936 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:33.943 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 14:14:40.031 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:40.039 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:40.047 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 14:14:46.307 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 14:14:46.310 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 14:14:46.317 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 14:14:46.399 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 19:51:22.284 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 24148 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 19:51:22.322 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 19:51:22.599 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 19:51:22.599 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 19:51:29.961 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 19:51:30.485 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 494ms. Found 17 repository interfaces.
15-04-2020 19:51:31.715 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5a31ec40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.816 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f2dfb47a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.831 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.831 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@257ae57a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.847 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$17b4572c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.885 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$3d096f42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.885 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.885 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:31.900 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$d9b23972] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:51:34.166 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 19:51:34.318 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 19:51:34.318 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 19:51:34.371 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;.]
15-04-2020 19:51:34.687 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 19:51:34.687 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 12088 ms
15-04-2020 19:51:36.354 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:51:39.632 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7908aeaf.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7908aeaf$$FastClassBySpringCGLIB$$ec2e4c62.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7908aeaf.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 19:51:39.670 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7908aeaf.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7908aeaf$$FastClassBySpringCGLIB$$ec2e4c62.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7908aeaf.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 19:51:40.134 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 19:51:40.517 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 19:51:40.517 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 19:51:41.291 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 19:51:41.819 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:51:44.883 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 142 common frames omitted
15-04-2020 19:51:44.883 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 19:51:44.968 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 19:51:45.048 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
15-04-2020 19:51:47.324 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:51:50.374 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 141 common frames omitted
15-04-2020 19:51:50.389 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: -1, SQLState: 08
15-04-2020 19:51:50.405 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 19:51:50.424 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#53639dfa' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#53639dfa': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
15-04-2020 19:51:50.502 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
15-04-2020 19:51:50.509 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
15-04-2020 19:51:50.540 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15-04-2020 19:51:50.556 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#53639dfa' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#53639dfa': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#53639dfa' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#53639dfa': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#53639dfa' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#53639dfa': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#53639dfa': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 141 common frames omitted
15-04-2020 19:56:48.160 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 8508 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 19:56:48.170 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 19:56:48.291 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 19:56:48.291 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 19:56:50.899 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 19:56:51.272 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 353ms. Found 17 repository interfaces.
15-04-2020 19:56:52.349 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6288749d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.427 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fb363cd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.448 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.450 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@67612c8e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.460 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$200adf89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.480 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$455ff79f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.488 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.490 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:52.510 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$e208c1cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:56:54.071 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 19:56:54.134 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 19:56:54.134 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 19:56:54.156 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;.]
15-04-2020 19:56:54.417 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 19:56:54.417 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 6126 ms
15-04-2020 19:56:55.626 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:56:58.751 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$815f370c.CGLIB$jpaVendorAdapter$8(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$815f370c$$FastClassBySpringCGLIB$$b7d877d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$815f370c.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 19:56:58.766 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$815f370c.CGLIB$jpaVendorAdapter$8(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$815f370c$$FastClassBySpringCGLIB$$b7d877d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$815f370c.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 19:56:59.136 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 19:56:59.249 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 19:56:59.249 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 19:56:59.520 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 19:56:59.842 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:57:02.868 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 142 common frames omitted
15-04-2020 19:57:02.868 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 19:57:02.937 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 19:57:03.015 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
15-04-2020 19:57:04.706 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:57:07.738 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 141 common frames omitted
15-04-2020 19:57:07.738 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: -1, SQLState: 08
15-04-2020 19:57:07.754 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 19:57:07.785 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#4b291347' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4b291347': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
15-04-2020 19:57:07.823 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
15-04-2020 19:57:07.839 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
15-04-2020 19:57:07.854 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15-04-2020 19:57:07.854 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#4b291347' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4b291347': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#4b291347' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4b291347': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#4b291347' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4b291347': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4b291347': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 141 common frames omitted
15-04-2020 19:57:39.405 [main] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/jaydeep/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/jaydeep/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

15-04-2020 19:57:39.445 [main] INFO  com.aroha.pet.PetApplicationTests.logStarting - Starting PetApplicationTests on LAPTOP-7VFDP9Q8 with PID 13824 (started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 19:57:39.453 [main] INFO  com.aroha.pet.PetApplicationTests.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 19:57:43.202 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 19:57:43.472 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 249ms. Found 17 repository interfaces.
15-04-2020 19:57:44.733 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e85e5406] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:44.894 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$810c1c40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:44.922 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:44.924 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@39ffda4a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:44.974 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a5e0bef2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:45.003 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$cb35d708] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:45.015 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:45.043 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:45.126 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$67dea138] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 19:57:46.203 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:57:49.347 [main] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7351675.CGLIB$jpaVendorAdapter$7(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7351675$$FastClassBySpringCGLIB$$ed1fd08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7351675.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 102 common frames omitted
15-04-2020 19:57:49.385 [main] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7351675.CGLIB$jpaVendorAdapter$7(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7351675$$FastClassBySpringCGLIB$$ed1fd08d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$7351675.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 88 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 89 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 102 common frames omitted
15-04-2020 19:57:49.532 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 19:57:49.685 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 19:57:49.685 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 19:57:49.917 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 19:57:50.666 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:57:53.704 [main] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 75 common frames omitted
15-04-2020 19:57:53.704 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 19:57:53.735 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 19:57:53.773 [main] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
15-04-2020 19:57:55.711 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 19:57:58.734 [main] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 74 common frames omitted
15-04-2020 19:57:58.750 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: -1, SQLState: 08
15-04-2020 19:57:58.750 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 19:57:58.788 [main] WARN  o.s.w.c.s.GenericWebApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
15-04-2020 19:57:58.819 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15-04-2020 19:57:58.834 [main] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 42 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 46 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 61 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 74 common frames omitted
15-04-2020 19:57:58.850 [main] ERROR o.s.test.context.TestContextManager.prepareTestInstance - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@185a6e9] to prepare test instance [com.aroha.pet.PetApplicationTests@11c999da]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	... 27 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 42 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 46 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 61 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 74 common frames omitted
15-04-2020 20:00:04.479 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 2936 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 20:00:04.479 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 20:00:04.592 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 20:00:04.592 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 20:00:07.097 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 20:00:07.359 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 242ms. Found 17 repository interfaces.
15-04-2020 20:00:08.355 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$39044ab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.444 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d1b212f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.456 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.456 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13e0c108' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.456 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f686b5a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.476 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$1bdbcdba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.486 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.486 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:08.506 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$b88497ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:10.136 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 20:00:10.174 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 20:00:10.190 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 20:00:10.205 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;.]
15-04-2020 20:00:10.444 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 20:00:10.444 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 5852 ms
15-04-2020 20:00:11.658 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:00:14.831 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$57db0d27.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$57db0d27$$FastClassBySpringCGLIB$$d9507c8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$57db0d27.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 20:00:14.862 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$57db0d27.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$57db0d27$$FastClassBySpringCGLIB$$d9507c8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$57db0d27.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 20:00:15.032 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 20:00:15.173 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 20:00:15.173 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 20:00:15.475 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 20:00:15.775 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:00:47.713 [main] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/jaydeep/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/jaydeep/.m2/repository/org/json/json/20180130/json-20180130.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

15-04-2020 20:00:47.773 [main] INFO  com.aroha.pet.PetApplicationTests.logStarting - Starting PetApplicationTests on LAPTOP-7VFDP9Q8 with PID 1604 (started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 20:00:47.777 [main] INFO  com.aroha.pet.PetApplicationTests.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 20:00:52.679 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 20:00:53.040 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 346ms. Found 17 repository interfaces.
15-04-2020 20:00:54.844 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2efc04b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:54.979 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c7a9cced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.000 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.005 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@497b560e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.032 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ec7e6f9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.075 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$11d387b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.096 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.107 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:55.184 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$ae7c51e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:00:56.389 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:00:59.490 [main] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4dd2c722.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4dd2c722$$FastClassBySpringCGLIB$$ef9e6321.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4dd2c722.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 102 common frames omitted
15-04-2020 20:00:59.507 [main] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4dd2c722.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4dd2c722$$FastClassBySpringCGLIB$$ef9e6321.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4dd2c722.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 88 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 89 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 102 common frames omitted
15-04-2020 20:00:59.678 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 20:00:59.862 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 20:00:59.865 [main] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 20:01:00.362 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 20:01:01.463 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:01:04.538 [main] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 75 common frames omitted
15-04-2020 20:01:04.538 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 20:01:04.578 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 20:01:04.608 [main] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
15-04-2020 20:14:05.792 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 5436 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 20:14:05.798 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 20:14:05.879 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 20:14:05.880 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 20:14:07.628 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 20:14:07.787 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 152ms. Found 17 repository interfaces.
15-04-2020 20:14:08.347 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ece4f781] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.402 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8592bfbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.412 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.418 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1bb2560a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.423 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$aa67626d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.433 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$cfbc7a83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.460 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.462 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:08.479 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$6c6544b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:14:09.153 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 20:14:09.179 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 20:14:09.179 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 20:14:09.187 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;F:\software\spring-tool-suite-4-4.6.0.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.0.RELEASE;;.]
15-04-2020 20:14:09.500 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 20:14:09.500 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3620 ms
15-04-2020 20:14:10.331 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:14:13.389 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$bbbb9f0.CGLIB$jpaVendorAdapter$7(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$bbbb9f0$$FastClassBySpringCGLIB$$22900274.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$bbbb9f0.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 20:14:13.413 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$bbbb9f0.CGLIB$jpaVendorAdapter$7(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$bbbb9f0$$FastClassBySpringCGLIB$$22900274.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$bbbb9f0.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 169 common frames omitted
15-04-2020 20:14:13.525 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 20:14:13.655 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 20:14:13.659 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 20:14:13.862 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 20:14:14.044 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:14:17.049 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 142 common frames omitted
15-04-2020 20:14:17.052 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 20:14:17.073 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 20:14:17.093 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
15-04-2020 20:14:18.278 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:14:21.285 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 141 common frames omitted
15-04-2020 20:14:21.289 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: -1, SQLState: 08
15-04-2020 20:14:21.290 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
15-04-2020 20:14:21.299 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#7a49f9c5' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7a49f9c5': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
15-04-2020 20:14:21.323 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
15-04-2020 20:14:21.329 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
15-04-2020 20:14:21.340 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15-04-2020 20:14:21.353 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#7a49f9c5' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7a49f9c5': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#7a49f9c5' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7a49f9c5': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#7a49f9c5' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7a49f9c5': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#7a49f9c5': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3306)(type=master) : Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.Driver.connect(Driver.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:501)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 141 common frames omitted
15-04-2020 20:37:32.113 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 26452 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 20:37:32.117 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 20:37:32.174 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 20:37:32.175 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 20:37:33.695 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 20:37:33.842 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 140ms. Found 17 repository interfaces.
15-04-2020 20:37:34.448 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ddd8acdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.505 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$76867517] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.514 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.519 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@27863483' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.521 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9b5b17c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.532 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c0b02fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.536 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.538 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:34.586 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5d58fa0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:37:35.403 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 20:37:35.434 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 20:37:35.434 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 20:37:35.442 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;F:\software\spring-tool-suite-4-4.6.0.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.0.RELEASE;;.]
15-04-2020 20:37:35.759 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 20:37:35.760 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3584 ms
15-04-2020 20:37:36.542 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:37:36.630 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
15-04-2020 20:37:36.745 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 20:37:36.857 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 20:37:36.860 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 20:37:37.047 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 20:37:37.232 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 20:37:38.993 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 20:37:39.889 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 20:37:40.357 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 20:37:41.894 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 20:37:43.158 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 20:37:43.407 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4acd672e, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c2ae598, org.springframework.security.web.header.HeaderWriterFilter@a254c77, org.springframework.web.filter.CorsFilter@266a8e3b, org.springframework.security.web.authentication.logout.LogoutFilter@726b5319, com.aroha.pet.security.JwtAuthenticationFilter@25b64ac1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f953d83, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a49e9ec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e9b8d95, org.springframework.security.web.session.SessionManagementFilter@759b9106, org.springframework.security.web.access.ExceptionTranslationFilter@7666e2e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c969e3]
15-04-2020 20:37:43.792 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 20:37:45.005 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 20:37:45.060 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 20:37:45.105 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 20:37:45.593 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 20:37:45.596 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 20:37:45.604 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 20:37:45.607 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 20:37:45.616 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 20:37:45.618 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 20:37:45.620 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 20:37:45.708 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 20:37:45.713 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 14.061 seconds (JVM running for 15.419)
15-04-2020 20:39:37.893 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 20:39:37.894 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 20:39:37.934 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 40 ms
15-04-2020 20:39:38.359 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 20:39:38.488 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:39:39.468 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 20:39:39.470 [http-nio-8080-exec-2] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
15-04-2020 20:40:08.539 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:40:08.542 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:40:08.578 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity  
    FROM
        users u 
    LEFT JOIN
        query_info q 
            ON u.id=q.created_by   
    left join
        user_roles r 
            on u.id=r.user_id 
    WHERE
        r.role_id=1  
    GROUP BY
        u.id,
        DAY(q.created_at)  
    having
        count(distinct q.scenario)>0;
15-04-2020 20:43:27.422 [Thread-6] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 20:43:27.439 [Thread-6] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 20:43:27.443 [Thread-6] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
15-04-2020 20:43:27.453 [Thread-6] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
15-04-2020 15:13:28.390 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 26452 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:13:28.391 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:13:29.460 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:13:29.600 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 139ms. Found 17 repository interfaces.
15-04-2020 15:13:29.800 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ddd8acdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.811 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$76867517] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.817 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.818 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4fa96910' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.819 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9b5b17c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.823 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c0b02fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.824 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.825 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:29.834 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5d58fa0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:13:30.269 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:13:30.270 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:13:30.270 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:13:30.299 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:13:30.299 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1906 ms
15-04-2020 15:13:30.757 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-2 - Starting...
15-04-2020 15:13:30.763 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-2 - Start completed.
15-04-2020 15:13:30.794 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:13:30.845 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:13:31.565 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:13:31.844 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:13:32.319 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:13:33.190 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:13:33.568 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:13:33.720 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8ec8527, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d40909e, org.springframework.security.web.header.HeaderWriterFilter@3a8a3e47, org.springframework.web.filter.CorsFilter@26d05284, org.springframework.security.web.authentication.logout.LogoutFilter@6452f752, com.aroha.pet.security.JwtAuthenticationFilter@3ed9b48b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a0d4fe9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@519e26e9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6013e39c, org.springframework.security.web.session.SessionManagementFilter@72e8f22a, org.springframework.security.web.access.ExceptionTranslationFilter@4c1d7ee9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36ff6cdb]
15-04-2020 15:13:33.816 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:13:34.145 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:13:34.149 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:13:34.161 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:13:34.504 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:13:34.509 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:13:34.520 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:13:34.525 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:13:34.559 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:13:34.571 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:13:34.577 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:13:34.878 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:13:34.893 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 6.549 seconds (JVM running for 364.599)
15-04-2020 15:13:34.901 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:15:15.197 [http-nio-8080-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 15:15:15.200 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 15:15:15.217 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 17 ms
15-04-2020 15:15:15.277 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:15.282 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:15.921 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:15.923 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:15.955 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        users a,
        user_roles b,
        roles c 
    where
        a.id = b.user_id 
        and b.role_id = c.id 
        and c.name = ?
15-04-2020 15:15:19.649 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:19.649 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:19.653 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:19.652 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:19.653 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:19.655 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:19.656 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:19.659 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:19.659 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:15:19.668 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:15:19.668 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:15:19.676 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:15:35.874 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:35.876 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:35.887 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:15:38.271 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:38.273 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:38.292 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
15-04-2020 15:15:45.043 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:45.045 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:45.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:45.045 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:45.047 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:15:45.051 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:45.055 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:45.057 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:15:45.061 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:15:45.066 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:15:45.074 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:15:45.080 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:16:06.757 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:06.759 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:06.764 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 15:16:18.961 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:18.963 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:18.970 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:16:19.001 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:16:24.421 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:24.421 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:24.423 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:24.427 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:24.429 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:24.431 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:24.433 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:24.434 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:24.444 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:16:24.445 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:16:24.449 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:16:24.455 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:16:32.452 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:32.452 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:32.454 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:32.454 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:32.462 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:16:32.470 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 15:16:32.500 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.512 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:16:32.669 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.675 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.684 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.724 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.758 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.762 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.766 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:16:32.770 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:16:32.771 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:16:32.774 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:16:38.422 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:38.424 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:38.425 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:38.451 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:38.455 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:38.458 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:38.469 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:16:38.475 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:16:38.477 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        cpojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:16:38.479 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:16:38.486 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        java_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:16:38.574 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 15:18:16.689 [Thread-16] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:18:16.694 [Thread-16] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:18:16.695 [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-2 - Shutdown initiated...
15-04-2020 15:18:16.701 [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-2 - Shutdown completed.
15-04-2020 15:18:17.385 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 26452 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:18:17.386 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:18:18.042 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:18:18.113 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 71ms. Found 17 repository interfaces.
15-04-2020 15:18:18.215 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ddd8acdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.221 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$76867517] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.223 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.224 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6d6f0c90' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.225 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9b5b17c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.229 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c0b02fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.230 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.230 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.234 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5d58fa0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:18:18.466 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:18:18.467 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:18:18.468 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:18:18.492 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:18:18.493 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1105 ms
15-04-2020 15:18:18.851 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-3 - Starting...
15-04-2020 15:18:18.855 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-3 - Start completed.
15-04-2020 15:18:18.877 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:18:18.904 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:18:19.313 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:18:19.521 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:18:19.823 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:18:20.401 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:18:20.678 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:18:20.752 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a2047c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@22286f2f, org.springframework.security.web.header.HeaderWriterFilter@27634408, org.springframework.web.filter.CorsFilter@1114fc2a, org.springframework.security.web.authentication.logout.LogoutFilter@386162d7, com.aroha.pet.security.JwtAuthenticationFilter@778be405, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@403718fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d4957f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a6336d6, org.springframework.security.web.session.SessionManagementFilter@5893bfdd, org.springframework.security.web.access.ExceptionTranslationFilter@571bf6b0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6726fd7a]
15-04-2020 15:18:20.825 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:18:21.043 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:18:21.045 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:18:21.051 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:18:21.178 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:18:21.181 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:18:21.186 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:18:21.189 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:18:21.195 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:18:21.196 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:18:21.198 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:18:21.236 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:18:21.237 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 3.881 seconds (JVM running for 650.943)
15-04-2020 15:18:21.246 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:20:35.633 [Thread-25] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:20:35.650 [Thread-25] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:20:35.652 [Thread-25] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-3 - Shutdown initiated...
15-04-2020 15:20:35.666 [Thread-25] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-3 - Shutdown completed.
15-04-2020 15:20:36.385 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 26452 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:20:36.386 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:20:37.092 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:20:37.160 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 67ms. Found 17 repository interfaces.
15-04-2020 15:20:37.255 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ddd8acdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.263 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$76867517] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.266 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.267 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5746bb82' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.268 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9b5b17c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.272 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c0b02fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.273 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.274 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.277 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5d58fa0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:20:37.518 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:20:37.519 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:20:37.520 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:20:37.541 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:20:37.542 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1154 ms
15-04-2020 15:20:37.866 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-4 - Starting...
15-04-2020 15:20:37.871 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-4 - Start completed.
15-04-2020 15:20:37.893 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:20:37.926 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:20:38.552 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:20:38.774 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:20:39.063 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:20:39.589 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:20:39.942 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:20:40.014 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fdbbdbb, org.springframework.security.web.context.SecurityContextPersistenceFilter@13a5748, org.springframework.security.web.header.HeaderWriterFilter@475c7be6, org.springframework.web.filter.CorsFilter@2d9ebb6f, org.springframework.security.web.authentication.logout.LogoutFilter@12c0f1f, com.aroha.pet.security.JwtAuthenticationFilter@140fe5c0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ca4769a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6883a7a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d6c643c, org.springframework.security.web.session.SessionManagementFilter@29181bcf, org.springframework.security.web.access.ExceptionTranslationFilter@77074a87, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@91e29da]
15-04-2020 15:20:40.097 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:20:40.302 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:20:40.304 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:20:40.311 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:20:40.435 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:20:40.437 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:20:40.441 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:20:40.444 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:20:40.451 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:20:40.452 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:20:40.453 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:20:40.494 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:20:40.498 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 4.141 seconds (JVM running for 790.205)
15-04-2020 15:20:40.512 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:21:50.365 [Thread-34] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:21:50.376 [Thread-34] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:21:50.378 [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-4 - Shutdown initiated...
15-04-2020 15:21:50.392 [Thread-34] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-4 - Shutdown completed.
15-04-2020 15:21:51.122 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 26452 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:21:51.122 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:21:51.758 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:21:51.825 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 67ms. Found 17 repository interfaces.
15-04-2020 15:21:51.924 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ddd8acdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.931 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$76867517] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.934 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.934 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2468e80b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.935 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9b5b17c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.939 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c0b02fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.939 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.940 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:51.943 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5d58fa0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:21:52.192 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:21:52.193 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:21:52.193 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:21:52.217 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:21:52.217 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1092 ms
15-04-2020 15:21:52.538 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-5 - Starting...
15-04-2020 15:21:52.542 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-5 - Start completed.
15-04-2020 15:21:52.563 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:21:52.592 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:21:53.006 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:21:53.198 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:21:53.454 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:21:53.973 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:21:54.265 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:21:54.347 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58683972, org.springframework.security.web.context.SecurityContextPersistenceFilter@3dabb3d4, org.springframework.security.web.header.HeaderWriterFilter@ab5d265, org.springframework.web.filter.CorsFilter@4b3e1f99, org.springframework.security.web.authentication.logout.LogoutFilter@404bdf14, com.aroha.pet.security.JwtAuthenticationFilter@13dcc537, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ac89386, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e4a5240, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@382e96bc, org.springframework.security.web.session.SessionManagementFilter@37d73b16, org.springframework.security.web.access.ExceptionTranslationFilter@e2b23e4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c250014]
15-04-2020 15:21:54.476 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:21:54.684 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:21:54.686 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:21:54.692 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:21:54.812 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:21:54.814 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:21:54.821 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:21:54.825 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:21:54.834 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:21:54.836 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:21:54.838 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:21:54.880 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:21:54.883 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 3.791 seconds (JVM running for 864.589)
15-04-2020 15:21:54.893 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:22:10.626 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 15:22:10.628 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 15:22:10.643 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 15 ms
15-04-2020 15:22:10.663 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:22:10.667 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:22:10.668 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:22:10.669 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:22:10.677 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 15:22:10.679 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:22:10.686 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.695 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:22:10.717 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.720 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.726 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.750 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.784 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.790 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.793 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:22:10.797 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:22:10.801 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:22:10.804 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:22:16.936 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:22:16.937 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:22:16.947 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:22:16.950 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:22:16.957 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:22:16.959 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:22:16.981 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:22:16.993 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:22:17.005 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:22:17.029 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:22:17.030 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:22:17.136 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;n" + 
    		"    
    ORDER BY
        created_at Desc;
15-04-2020 15:22:17.146 [http-nio-8080-exec-6] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 1064, SQLState: 42000
15-04-2020 15:22:17.147 [http-nio-8080-exec-6] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - (conn=47) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'n" + 
15-04-2020 15:22:17.192 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'n" + 
    		"		  ORDER BY created_at Desc' at line 24
Query is: SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity       
    FROM
        users u      
    LEFT JOIN
        javascript_pojo q              
            ON u.id=q.created_by        
    left join
        user_roles r              
            on u.id=r.user_id      
    WHERE
        r.role_id =1       
    GROUP BY
        u.id,
        DAY(q.created_at)       
    having
        count(distinct q.scenario)>0;n" + 
    		"		  ORDER BY created_at Desc;
java thread: http-nio-8080-exec-6
	at org.mariadb.jdbc.internal.util.LogQueryTool.exceptionWithQuery(LogQueryTool.java:163) ~[mariadb-java-client-2.3.0.jar:na]
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:280) ~[mariadb-java-client-2.3.0.jar:na]
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:223) ~[mariadb-java-client-2.3.0.jar:na]
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:159) ~[mariadb-java-client-2.3.0.jar:na]
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeQuery(MariaDbPreparedStatementClient.java:174) ~[mariadb-java-client-2.3.0.jar:na]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) ~[HikariCP-3.2.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) ~[HikariCP-3.2.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2167) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1930) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:937) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2689) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2672) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2501) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2223) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1053) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.hibernate.query.Query.getResultList(Query.java:135) ~[hibernate-core-5.3.7.Final.jar:5.3.7.Final]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129) ~[spring-data-jpa-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91) ~[spring-data-jpa-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136) ~[spring-data-jpa-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125) ~[spring-data-jpa-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595) ~[spring-data-commons-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) ~[spring-data-commons-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) ~[spring-data-jpa-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) ~[spring-data-commons-2.1.5.RELEASE.jar:2.1.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.sun.proxy.$Proxy280.generateReport(Unknown Source) ~[na:na]
	at com.aroha.pet.service.JavascriptService.getReportCard(JavascriptService.java:207) ~[classes/:na]
	at com.aroha.pet.controller.JavascriptController.generateReportCard(JavascriptController.java:34) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_221]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_221]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.1.4.RELEASE.jar:5.1.4.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
15-04-2020 15:22:42.959 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown - Application shutdown requested.
15-04-2020 15:22:42.962 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:22:42.967 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:22:42.968 [RMI TCP Connection(41)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-5 - Shutdown initiated...
15-04-2020 15:22:42.975 [RMI TCP Connection(41)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-5 - Shutdown completed.
15-04-2020 20:52:53.083 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 6024 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 20:52:53.088 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 20:52:53.158 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 20:52:53.158 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 20:52:54.777 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 20:52:54.930 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 146ms. Found 17 repository interfaces.
15-04-2020 20:52:55.524 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4848ac32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.597 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e0f6746c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.604 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.607 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@30ab16ca' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.612 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5cb171e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.621 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2b202f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.624 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.626 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:55.641 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c7c8f964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 20:52:56.307 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 20:52:56.335 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 20:52:56.335 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 20:52:56.344 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;F:\software\spring-tool-suite-4-4.6.0.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.0.RELEASE;;.]
15-04-2020 20:52:56.675 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 20:52:56.676 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3516 ms
15-04-2020 20:52:57.512 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 20:52:57.569 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
15-04-2020 20:52:57.689 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 20:52:57.778 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 20:52:57.781 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 20:52:57.966 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 20:52:58.155 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 20:52:59.516 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 20:53:00.168 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 20:53:00.583 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 20:53:01.791 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 20:53:02.705 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 20:53:02.871 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@169c193a, org.springframework.security.web.context.SecurityContextPersistenceFilter@728454b8, org.springframework.security.web.header.HeaderWriterFilter@2fdb0888, org.springframework.web.filter.CorsFilter@624ebb3e, org.springframework.security.web.authentication.logout.LogoutFilter@590b9cb9, com.aroha.pet.security.JwtAuthenticationFilter@582f39d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64b8998a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@273d43ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5953593a, org.springframework.security.web.session.SessionManagementFilter@17255ce, org.springframework.security.web.access.ExceptionTranslationFilter@5568c355, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@370ad20b]
15-04-2020 20:53:03.118 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 20:53:03.776 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 20:53:03.795 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 20:53:03.824 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 20:53:04.178 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 20:53:04.181 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 20:53:04.188 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 20:53:04.192 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 20:53:04.202 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 20:53:04.204 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 20:53:04.207 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 20:53:04.295 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 20:53:04.299 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 11.757 seconds (JVM running for 13.395)
15-04-2020 20:54:32.891 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 20:54:32.891 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 20:54:32.921 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 30 ms
15-04-2020 20:54:33.715 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:54:33.715 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:54:33.766 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:54:33.766 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:54:33.842 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 20:54:33.856 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 20:54:33.864 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.873 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 20:54:33.913 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.917 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.923 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.943 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.981 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.992 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:33.997 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 20:54:34.007 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 20:54:34.010 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 20:54:34.016 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 20:54:37.262 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:54:37.307 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:54:37.307 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:54:37.312 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:54:37.346 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 20:54:37.348 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:54:37.349 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 20:54:37.362 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 20:54:37.391 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:54:37.393 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 20:54:37.465 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        javascript_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
15-04-2020 20:54:37.480 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 20:55:58.625 [Thread-7] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 20:55:58.639 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 20:55:58.643 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
15-04-2020 20:55:58.655 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
15-04-2020 15:25:59.328 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 6024 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:25:59.329 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:25:59.964 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:26:00.042 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 77ms. Found 17 repository interfaces.
15-04-2020 15:26:00.145 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4848ac32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.149 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e0f6746c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.151 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.152 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@69a24e6d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.156 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5cb171e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.159 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2b202f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.160 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.161 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.164 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c7c8f964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:26:00.394 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:26:00.395 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:26:00.395 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:26:00.422 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:26:00.422 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1090 ms
15-04-2020 15:26:00.742 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-2 - Starting...
15-04-2020 15:26:00.747 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-2 - Start completed.
15-04-2020 15:26:00.769 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:26:00.798 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:26:01.256 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:26:01.463 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:26:01.752 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:26:02.331 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:26:02.625 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:26:02.724 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5931c317, org.springframework.security.web.context.SecurityContextPersistenceFilter@17e2753e, org.springframework.security.web.header.HeaderWriterFilter@10a2aa2a, org.springframework.web.filter.CorsFilter@11ec1daa, org.springframework.security.web.authentication.logout.LogoutFilter@1fe67fb9, com.aroha.pet.security.JwtAuthenticationFilter@a80a6b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27927b15, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22e46637, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a4f072e, org.springframework.security.web.session.SessionManagementFilter@7828a2f0, org.springframework.security.web.access.ExceptionTranslationFilter@1064048b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6275ca3e]
15-04-2020 15:26:02.794 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:26:03.015 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:26:03.018 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:26:03.029 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:26:03.213 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:26:03.217 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:26:03.226 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:26:03.231 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:26:03.242 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:26:03.244 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:26:03.247 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:26:03.304 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:26:03.317 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 4.026 seconds (JVM running for 192.413)
15-04-2020 15:26:03.333 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:26:17.717 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 15:26:17.718 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 15:26:17.735 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 16 ms
15-04-2020 15:26:17.757 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:17.757 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:17.760 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:17.760 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:17.771 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 15:26:17.771 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:26:17.779 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.786 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:26:17.805 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.810 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.819 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.842 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.880 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.889 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.893 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:26:17.901 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:26:17.904 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:26:17.910 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:26:22.923 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:22.923 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:22.925 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:22.931 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:22.931 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:22.931 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:22.937 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:22.941 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:26:22.941 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:26:22.944 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:22.947 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:26:22.984 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:26:48.303 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:48.304 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:48.324 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:26:50.025 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:50.026 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:50.030 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:50.032 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:50.034 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:50.035 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:50.037 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:50.040 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:50.044 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:26:50.050 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:26:50.055 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:26:50.061 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:26:54.528 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:54.530 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:54.535 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:26:57.758 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:57.758 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:57.760 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:57.761 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:57.762 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:57.763 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:57.764 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:57.767 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:57.771 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:26:57.773 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:26:57.775 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:26:57.775 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:26:58.899 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:26:58.901 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:26:58.904 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:27:01.527 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:01.530 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:01.531 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:01.533 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:01.535 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:01.539 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:01.542 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:01.548 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:27:01.548 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:01.569 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:27:01.571 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:27:01.573 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:27:04.111 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:04.113 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:04.116 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:27:07.210 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:07.212 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:07.220 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
15-04-2020 15:27:18.837 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:18.840 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:18.841 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:18.843 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:18.845 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:18.845 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:18.848 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:18.852 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:27:18.853 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:18.855 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:27:18.859 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:27:18.878 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:27:21.723 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:21.725 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:21.728 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:27:26.394 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:27:26.396 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:27:26.403 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
15-04-2020 15:28:06.252 [Thread-16] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:28:06.272 [Thread-16] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:28:06.273 [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-2 - Shutdown initiated...
15-04-2020 15:28:06.285 [Thread-16] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-2 - Shutdown completed.
15-04-2020 15:28:07.008 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 6024 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:28:07.008 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:28:07.642 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:28:07.713 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 70ms. Found 17 repository interfaces.
15-04-2020 15:28:07.824 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4848ac32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.828 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e0f6746c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.830 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.831 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4ce7a118' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.838 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5cb171e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.843 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2b202f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.843 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.843 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:07.848 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c7c8f964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:28:08.118 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:28:08.120 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:28:08.120 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:28:08.142 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:28:08.142 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1131 ms
15-04-2020 15:28:08.582 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-3 - Starting...
15-04-2020 15:28:08.586 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-3 - Start completed.
15-04-2020 15:28:08.607 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:28:08.636 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:28:09.064 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:28:09.353 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:28:09.679 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:28:10.292 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:28:10.635 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:28:10.726 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c4d4e94, org.springframework.security.web.context.SecurityContextPersistenceFilter@1fab297b, org.springframework.security.web.header.HeaderWriterFilter@2c1d0db7, org.springframework.web.filter.CorsFilter@1772db51, org.springframework.security.web.authentication.logout.LogoutFilter@3534f48e, com.aroha.pet.security.JwtAuthenticationFilter@71eade7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c0206d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48b6c250, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ec8fde0, org.springframework.security.web.session.SessionManagementFilter@21fb9098, org.springframework.security.web.access.ExceptionTranslationFilter@5588d65a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79c4b619]
15-04-2020 15:28:10.806 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:28:11.018 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:28:11.020 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:28:11.027 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:28:11.184 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:28:11.187 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:28:11.192 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:28:11.195 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:28:11.203 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:28:11.204 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:28:11.206 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:28:11.245 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:28:11.247 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 4.272 seconds (JVM running for 320.343)
15-04-2020 15:28:11.258 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:28:15.448 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 15:28:15.449 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 15:28:15.460 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 11 ms
15-04-2020 15:28:15.479 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:15.479 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:15.487 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:15.487 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:15.493 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:28:15.494 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 15:28:15.497 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.507 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:28:15.525 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.529 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.540 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.559 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.610 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.619 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.622 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:28:15.629 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:28:15.631 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:28:15.636 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:28:18.056 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:18.056 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:18.057 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:18.060 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:18.061 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:18.062 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:18.065 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:18.069 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:18.071 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:28:18.071 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:28:18.078 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:28:18.087 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:28:19.995 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:19.997 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:20.002 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:28:23.244 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:23.247 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:23.248 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:23.249 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:23.252 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:23.253 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:23.255 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:23.257 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:23.262 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:28:23.265 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:28:23.265 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:28:23.267 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:28:24.429 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:24.432 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:24.436 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 15:28:27.021 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:28:27.022 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:28:27.029 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
15-04-2020 15:29:40.163 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:29:40.165 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:29:40.166 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:29:40.166 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:29:40.168 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:29:40.169 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:29:40.171 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:29:40.171 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:29:40.175 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 15:29:40.176 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 15:29:40.177 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:29:40.178 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 15:29:42.709 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:29:42.711 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:29:42.716 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 15:29:44.476 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:29:44.478 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:29:44.483 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:29:44.520 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:30:28.000 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:30:28.002 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:30:28.006 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:30:28.034 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:32:42.515 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 15:32:42.518 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:32:42.673 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 15:32:42.674 [http-nio-8080-exec-8] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
15-04-2020 15:33:22.491 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:33:22.493 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:33:22.498 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:33:22.561 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 15:34:15.238 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:34:15.238 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 15:34:15.241 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:34:15.241 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 15:34:15.246 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 15:34:15.247 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:34:15.253 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.256 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:34:15.274 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.277 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.282 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.302 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.347 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.353 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.356 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:34:15.360 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 15:34:15.362 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 15:34:15.365 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 15:36:41.166 [Thread-25] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:36:41.177 [Thread-25] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:36:41.180 [Thread-25] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-3 - Shutdown initiated...
15-04-2020 15:36:41.191 [Thread-25] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-3 - Shutdown completed.
15-04-2020 15:36:41.939 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 6024 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 15:36:41.939 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 15:36:42.576 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 15:36:42.647 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 71ms. Found 17 repository interfaces.
15-04-2020 15:36:42.751 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4848ac32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.755 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e0f6746c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.757 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.758 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@352762dd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.761 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5cb171e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.765 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2b202f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.765 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.766 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:42.769 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c7c8f964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 15:36:43.024 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 15:36:43.025 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 15:36:43.026 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 15:36:43.046 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 15:36:43.046 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1105 ms
15-04-2020 15:36:43.378 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-4 - Starting...
15-04-2020 15:36:43.383 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-4 - Start completed.
15-04-2020 15:36:43.403 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 15:36:43.429 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 15:36:43.861 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:36:44.067 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 15:36:44.368 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 15:36:44.914 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 15:36:45.253 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 15:36:45.335 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57e5e9fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a5d2985, org.springframework.security.web.header.HeaderWriterFilter@3c7d5a03, org.springframework.web.filter.CorsFilter@6a5291bc, org.springframework.security.web.authentication.logout.LogoutFilter@7ec1adc4, com.aroha.pet.security.JwtAuthenticationFilter@5dd758fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b5d102a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d26e800, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e0e21f1, org.springframework.security.web.session.SessionManagementFilter@1125cdc, org.springframework.security.web.access.ExceptionTranslationFilter@3ebdfd91, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3fb0c8fc]
15-04-2020 15:36:45.429 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 15:36:45.638 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 15:36:45.640 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 15:36:45.647 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 15:36:45.790 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 15:36:45.793 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 15:36:45.799 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 15:36:45.802 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 15:36:45.810 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 15:36:45.811 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 15:36:45.812 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 15:36:45.848 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 15:36:45.849 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 3.937 seconds (JVM running for 834.946)
15-04-2020 15:36:45.862 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent - Condition evaluation unchanged
15-04-2020 15:37:01.499 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown - Application shutdown requested.
15-04-2020 15:37:01.504 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 15:37:01.509 [RMI TCP Connection(41)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 15:37:01.510 [RMI TCP Connection(41)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-4 - Shutdown initiated...
15-04-2020 15:37:01.519 [RMI TCP Connection(41)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-4 - Shutdown completed.
15-04-2020 21:07:06.749 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 15732 (F:\PetTestAroha\pet-app-jpa\target\classes started by jaydeep in F:\PetTestAroha\pet-app-jpa)
15-04-2020 21:07:06.753 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
15-04-2020 21:07:06.817 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
15-04-2020 21:07:06.818 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
15-04-2020 21:07:08.365 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
15-04-2020 21:07:08.530 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 158ms. Found 17 repository interfaces.
15-04-2020 21:07:09.093 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$22f724a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.165 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bba4ecdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.172 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.175 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@359cd4fe' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.177 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e0798f8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.186 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$5cea7a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.189 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.191 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.209 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$a27771d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15-04-2020 21:07:09.912 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
15-04-2020 21:07:09.940 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
15-04-2020 21:07:09.941 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
15-04-2020 21:07:09.949 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;F:\software\spring-tool-suite-4-4.6.0.RELEASE-e4.15.0-win32.win32.x86_64.self-extracting\contents\sts-4.6.0.RELEASE;;.]
15-04-2020 21:07:10.275 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
15-04-2020 21:07:10.276 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3458 ms
15-04-2020 21:07:11.072 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
15-04-2020 21:07:11.133 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
15-04-2020 21:07:11.252 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15-04-2020 21:07:11.344 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
15-04-2020 21:07:11.346 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
15-04-2020 21:07:11.528 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
15-04-2020 21:07:11.725 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
15-04-2020 21:07:12.950 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table mentor_feedback (
       feedback_id integer not null auto_increment,
        created_at datetime,
        error varchar(255),
        exception_str longtext,
        feedback varchar(255),
        learner_id bigint not null,
        learner_name varchar(255),
        mentor_id bigint not null,
        mentor_name varchar(255),
        notification integer not null,
        programing_str longtext,
        query_date varchar(255),
        question varchar(255),
        question_id integer not null,
        resulstr longtext,
        sql_str longtext,
        technology_id integer not null,
        technology_name varchar(255),
        primary key (feedback_id)
    ) engine=InnoDB
15-04-2020 21:07:13.422 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 21:07:14.116 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
15-04-2020 21:07:14.484 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
15-04-2020 21:07:15.690 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15-04-2020 21:07:16.602 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
15-04-2020 21:07:16.774 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72376832, org.springframework.security.web.context.SecurityContextPersistenceFilter@23bc8282, org.springframework.security.web.header.HeaderWriterFilter@135473ad, org.springframework.web.filter.CorsFilter@1b9809b0, org.springframework.security.web.authentication.logout.LogoutFilter@6a45ad55, com.aroha.pet.security.JwtAuthenticationFilter@414f2490, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@343f2a03, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67b56f55, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6645591a, org.springframework.security.web.session.SessionManagementFilter@40b3c255, org.springframework.security.web.access.ExceptionTranslationFilter@5a775b6f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4142e593]
15-04-2020 21:07:17.028 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
15-04-2020 21:07:17.670 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
15-04-2020 21:07:17.690 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
15-04-2020 21:07:17.718 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
15-04-2020 21:07:18.083 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
15-04-2020 21:07:18.086 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
15-04-2020 21:07:18.094 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
15-04-2020 21:07:18.097 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
15-04-2020 21:07:18.107 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
15-04-2020 21:07:18.109 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
15-04-2020 21:07:18.111 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
15-04-2020 21:07:18.226 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
15-04-2020 21:07:18.233 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 11.955 seconds (JVM running for 13.352)
15-04-2020 21:07:37.756 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
15-04-2020 21:07:37.756 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
15-04-2020 21:07:37.786 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 29 ms
15-04-2020 21:07:37.897 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
15-04-2020 21:07:39.638 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 21:07:39.662 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:40.355 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 21:07:40.357 [http-nio-8080-exec-3] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
15-04-2020 21:07:40.400 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:40.402 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:40.665 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:40.670 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:40.723 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        users a,
        user_roles b,
        roles c 
    where
        a.id = b.user_id 
        and b.role_id = c.id 
        and c.name = ?
15-04-2020 21:07:43.532 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:43.541 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:43.544 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:43.546 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:43.547 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:43.550 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:43.555 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:43.557 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:43.560 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:07:43.560 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:07:43.566 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:07:43.568 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:07:54.397 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:54.399 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:54.408 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 21:07:56.247 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:07:56.279 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:07:56.290 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:07:56.328 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:08:29.591 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:08:29.594 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:08:29.608 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:08:29.631 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2] with root cause
javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1561)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:214)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy155.searchCRepo(Unknown Source)
	at com.aroha.pet.service.CService.findByTechnologyRepo(CService.java:261)
	at com.aroha.pet.service.FeedBackService.saveCPoramFeedback(FeedBackService.java:300)
	at com.aroha.pet.controller.FeedBackController.saveMentorFeedback(FeedBackController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15-04-2020 21:09:01.313 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
15-04-2020 21:09:02.810 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 21:09:02.813 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:02.947 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
15-04-2020 21:09:02.948 [http-nio-8080-exec-8] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
15-04-2020 21:09:02.964 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:02.967 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:03.228 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:03.229 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:03.234 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        users a,
        user_roles b,
        roles c 
    where
        a.id = b.user_id 
        and b.role_id = c.id 
        and c.name = ?
15-04-2020 21:09:05.811 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:05.813 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:05.815 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:05.816 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:05.816 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:05.817 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:05.821 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:05.823 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:05.833 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:09:05.839 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:09:05.844 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:09:05.856 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:09:07.988 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:07.991 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:07.996 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 21:09:10.066 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:10.068 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:10.073 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:09:10.116 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:09:48.160 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:09:48.164 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:09:48.173 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:09:48.178 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2] with root cause
javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1561)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:214)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy155.searchCRepo(Unknown Source)
	at com.aroha.pet.service.CService.findByTechnologyRepo(CService.java:261)
	at com.aroha.pet.service.FeedBackService.saveCPoramFeedback(FeedBackService.java:300)
	at com.aroha.pet.controller.FeedBackController.saveMentorFeedback(FeedBackController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15-04-2020 21:10:36.504 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:36.505 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:36.506 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:36.509 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:36.510 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:36.513 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:36.516 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:36.522 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:36.527 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:10:36.551 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:10:36.571 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:10:36.589 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:10:38.334 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:38.338 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:38.349 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
15-04-2020 21:10:40.279 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:40.281 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:40.291 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
15-04-2020 21:10:49.396 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:49.399 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:10:49.404 [http-nio-8080-exec-9] INFO  c.aroha.pet.service.FeedBackService.saveFeedback - ----------queryInfo49
15-04-2020 21:10:49.406 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        query_info 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:10:49.425 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:10:49.446 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:10:49.454 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:10:49.515 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:11:10.067 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:10.068 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:10.070 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:10.072 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:10.077 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:10.081 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:10.085 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:10.088 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:10.110 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:11:10.111 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:11:10.115 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:11:10.115 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:11:12.661 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:12.664 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:12.675 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 21:11:15.248 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:15.249 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:15.254 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:11:15.301 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:11:32.575 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:32.577 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:32.582 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:11:32.596 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2] with root cause
javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1561)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:214)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy155.searchCRepo(Unknown Source)
	at com.aroha.pet.service.CService.findByTechnologyRepo(CService.java:261)
	at com.aroha.pet.service.FeedBackService.saveCPoramFeedback(FeedBackService.java:300)
	at com.aroha.pet.controller.FeedBackController.saveMentorFeedback(FeedBackController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15-04-2020 21:11:51.565 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:51.572 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:51.576 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:51.578 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:51.583 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:51.583 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:11:51.586 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:51.589 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:51.593 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:51.599 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:11:51.603 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:11:51.612 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:11:53.969 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:53.972 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:53.978 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 21:11:56.571 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:11:56.573 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:11:56.578 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:11:56.623 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:12:07.622 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:12:07.625 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:12:07.631 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:12:07.635 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:12:07.646 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:12:07.648 [http-nio-8080-exec-6] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 21:12:07.650 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:12:07.661 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:12:25.250 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:12:25.255 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:12:25.261 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:12:25.265 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2] with root cause
javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1561)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:214)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy155.searchCRepo(Unknown Source)
	at com.aroha.pet.service.CService.findByTechnologyRepo(CService.java:261)
	at com.aroha.pet.service.FeedBackService.saveCPoramFeedback(FeedBackService.java:300)
	at com.aroha.pet.controller.FeedBackController.saveMentorFeedback(FeedBackController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15-04-2020 21:12:34.878 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:12:34.880 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:12:34.888 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:12:34.897 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:12:34.908 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:12:34.910 [http-nio-8080-exec-1] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 21:12:34.911 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:12:34.916 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:12:51.253 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:12:51.256 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:12:51.263 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:12:51.307 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:13:18.759 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:13:18.763 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:13:18.768 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:13:18.774 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2] with root cause
javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1561)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:214)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy155.searchCRepo(Unknown Source)
	at com.aroha.pet.service.CService.findByTechnologyRepo(CService.java:261)
	at com.aroha.pet.service.FeedBackService.saveCPoramFeedback(FeedBackService.java:300)
	at com.aroha.pet.controller.FeedBackController.saveMentorFeedback(FeedBackController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15-04-2020 21:14:39.980 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:39.987 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:39.989 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:39.989 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:39.991 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:39.991 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:39.998 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:40.000 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:40.005 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:14:40.007 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:14:40.013 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:14:40.024 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:14:42.491 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:42.494 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:42.500 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 21:14:44.524 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:44.526 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:44.530 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:14:44.576 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:14:50.908 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:50.913 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:50.919 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:14:50.926 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:50.935 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:14:50.939 [http-nio-8080-exec-2] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 21:14:50.940 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:14:50.945 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:14:57.122 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:57.125 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:14:57.130 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:14:57.138 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:14:57.142 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:14:57.145 [http-nio-8080-exec-7] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 21:14:57.147 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:14:57.152 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:15:02.057 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:15:02.062 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:15:02.065 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:15:02.068 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:15:02.073 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:15:02.077 [http-nio-8080-exec-9] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 21:15:02.078 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:15:02.082 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:15:06.851 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:15:06.854 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:15:06.865 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:15:06.900 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:15:50.759 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:15:50.761 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:15:50.766 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        cpojo 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
15-04-2020 21:15:50.769 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:15:50.774 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:15:50.776 [http-nio-8080-exec-6] INFO  c.aroha.pet.service.FeedBackService.saveCPoramFeedback - -----------------------technology id is--------
2
15-04-2020 21:15:50.777 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
15-04-2020 21:15:50.783 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
15-04-2020 21:17:23.161 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:23.170 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:34.561 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:34.563 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:34.928 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:34.930 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:34.935 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        users a,
        user_roles b,
        roles c 
    where
        a.id = b.user_id 
        and b.role_id = c.id 
        and c.name = ?
15-04-2020 21:17:37.747 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:37.749 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:37.751 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:37.754 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:37.757 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:37.759 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:37.761 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:37.766 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:37.770 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:17:37.770 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:17:37.777 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:17:37.793 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:17:39.321 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:39.323 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:39.327 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name   
    FROM
        domain d          
    INNER JOIN
        function_table f                  
            ON d.domain_id = f.domain_id          
    INNER JOIN
        scenario s                  
            ON f.function_id = s.function_id          
    INNER JOIN
        question q                  
            ON s.scenario_id = q.scenario_id          
    INNER JOIN
        cpojo q1                  
            ON q1.question_id = q.question_id          
    INNER JOIN
        users u                  
            ON u.id = q1.created_by   
    WHERE
        Date(q1.created_at) = Date(?)          
        AND q1.created_by = ?   
    ORDER  BY
        scenario; 
15-04-2020 21:17:41.125 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:41.127 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:41.130 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:17:41.159 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.cstr,
        c.error,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        cpojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id    
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
15-04-2020 21:17:53.784 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:53.784 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:17:53.786 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:53.789 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:17:53.798 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 21:17:53.806 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
15-04-2020 21:17:53.808 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.814 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:17:53.862 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.866 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.877 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.902 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.943 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.950 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.952 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:17:53.958 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
15-04-2020 21:17:53.960 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
15-04-2020 21:17:53.964 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
15-04-2020 21:18:10.063 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:18:10.065 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:18:10.066 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:18:10.069 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:18:10.069 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
15-04-2020 21:18:10.071 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:18:10.073 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:18:10.075 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
15-04-2020 21:18:10.078 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:18:10.082 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
15-04-2020 21:18:10.089 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
15-04-2020 21:18:10.091 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
15-04-2020 21:19:17.071 [RMI TCP Connection(23)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown - Application shutdown requested.
15-04-2020 21:19:17.077 [RMI TCP Connection(23)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor.shutdown - Shutting down ExecutorService 'applicationTaskExecutor'
15-04-2020 21:19:17.090 [RMI TCP Connection(23)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
15-04-2020 21:19:17.093 [RMI TCP Connection(23)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
15-04-2020 21:19:17.101 [RMI TCP Connection(23)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
