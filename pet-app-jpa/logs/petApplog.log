24-04-2020 01:21:19.382 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 26448 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 01:21:19.405 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 01:21:19.614 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 01:21:19.614 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 01:21:24.012 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 01:21:24.360 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 327ms. Found 17 repository interfaces.
24-04-2020 01:21:25.721 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$47341d5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.860 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$dfe1e597] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.887 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.894 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2229f26' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.896 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$4b68849] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.915 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2a0ba05f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.928 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.936 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:25.990 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c6b46a8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:21:28.281 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 01:21:28.373 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 01:21:28.374 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 01:21:28.414 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;C:\Users\jaydeep\Desktop;;.]
24-04-2020 01:21:28.909 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 01:21:28.910 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 9294 ms
24-04-2020 01:21:31.393 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:21:33.102 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$660adfcc.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$660adfcc$$FastClassBySpringCGLIB$$e7dd9282.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$660adfcc.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:21:33.120 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$660adfcc.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$660adfcc$$FastClassBySpringCGLIB$$e7dd9282.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$660adfcc.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
24-04-2020 01:21:33.472 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 01:21:33.677 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 01:21:33.685 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 01:21:34.145 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 01:21:34.776 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:21:35.783 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:21:35.799 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Public Key Retrieval is not allowed
24-04-2020 01:21:35.826 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 01:21:35.866 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
24-04-2020 01:21:40.162 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:21:41.170 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:21:41.178 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 08001
24-04-2020 01:21:41.179 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Public Key Retrieval is not allowed
24-04-2020 01:21:41.190 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#66405245' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#66405245': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
24-04-2020 01:21:41.237 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
24-04-2020 01:21:41.249 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
24-04-2020 01:21:41.270 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-04-2020 01:21:41.277 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#66405245' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#66405245': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#66405245' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#66405245': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#66405245' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#66405245': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#66405245': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
24-04-2020 01:22:19.678 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 28240 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 01:22:19.687 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 01:22:19.854 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 01:22:19.857 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 01:22:25.229 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 01:22:25.680 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 421ms. Found 17 repository interfaces.
24-04-2020 01:22:27.685 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$72b668e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.814 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b64311e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.844 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.848 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1dd5fa53' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.857 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3038d3d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.877 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$558debe6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.883 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.886 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:27.990 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$f236b616] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:22:31.309 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 01:22:31.446 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 01:22:31.447 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 01:22:31.478 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;C:\Users\jaydeep\Desktop;;.]
24-04-2020 01:22:31.798 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 01:22:31.799 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 11940 ms
24-04-2020 01:22:34.020 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:22:35.386 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$918d2b53.CGLIB$jpaVendorAdapter$9(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$918d2b53$$FastClassBySpringCGLIB$$24bc2d01.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$918d2b53.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:22:35.399 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$918d2b53.CGLIB$jpaVendorAdapter$9(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$918d2b53$$FastClassBySpringCGLIB$$24bc2d01.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$918d2b53.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
24-04-2020 01:22:35.692 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 01:22:36.106 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 01:22:36.114 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 01:22:36.876 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 01:22:37.374 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:22:38.391 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:22:38.395 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Public Key Retrieval is not allowed
24-04-2020 01:22:38.425 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 01:22:38.454 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
24-04-2020 01:22:41.727 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:22:42.732 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:22:42.738 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 08001
24-04-2020 01:22:42.739 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Public Key Retrieval is not allowed
24-04-2020 01:22:42.751 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#333f7bf4' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#333f7bf4': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
24-04-2020 01:22:42.792 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
24-04-2020 01:22:42.798 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
24-04-2020 01:22:42.846 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-04-2020 01:22:42.857 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#333f7bf4' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#333f7bf4': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#333f7bf4' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#333f7bf4': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#333f7bf4' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#333f7bf4': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#333f7bf4': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
24-04-2020 01:25:22.449 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 28460 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 01:25:22.457 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 01:25:22.669 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 01:25:22.670 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 01:25:26.851 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 01:25:27.257 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 378ms. Found 17 repository interfaces.
24-04-2020 01:25:28.890 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c9a315e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.081 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c547f998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.096 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.100 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3fd0f0af' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.111 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ea1c9c4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.158 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$f71b460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.179 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.183 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:29.241 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$ac1a7e90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:25:31.476 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 01:25:31.560 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 01:25:31.561 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 01:25:31.591 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;C:\Users\jaydeep\Desktop;;.]
24-04-2020 01:25:31.966 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 01:25:31.967 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 9297 ms
24-04-2020 01:25:34.120 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:25:35.524 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4b70f3cd.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4b70f3cd$$FastClassBySpringCGLIB$$38ecfde4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4b70f3cd.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:25:35.566 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4b70f3cd.CGLIB$jpaVendorAdapter$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4b70f3cd$$FastClassBySpringCGLIB$$38ecfde4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$4b70f3cd.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
24-04-2020 01:25:35.833 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 01:25:36.007 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 01:25:36.010 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 01:25:36.297 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 01:25:36.664 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:25:37.669 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:25:37.673 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Public Key Retrieval is not allowed
24-04-2020 01:25:37.700 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 01:25:37.741 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
24-04-2020 01:25:42.388 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:25:43.397 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
24-04-2020 01:25:43.403 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 08001
24-04-2020 01:25:43.404 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Public Key Retrieval is not allowed
24-04-2020 01:25:43.416 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#e068b69' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#e068b69': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
24-04-2020 01:25:43.473 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
24-04-2020 01:25:43.480 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
24-04-2020 01:25:43.515 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-04-2020 01:25:43.526 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#e068b69' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#e068b69': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#e068b69' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#e068b69': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#e068b69' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#e068b69': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#e068b69': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
24-04-2020 01:36:13.139 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 9452 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 01:36:13.147 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 01:36:13.294 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 01:36:13.295 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 01:36:17.290 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 01:36:17.709 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 400ms. Found 17 repository interfaces.
24-04-2020 01:36:19.533 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$defe4a1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.641 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$77ac1256] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ccb079b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.674 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9c80b508] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.701 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c1d5cd1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.710 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.713 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:19.736 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5e7e974e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 01:36:22.074 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 01:36:22.135 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 01:36:22.136 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 01:36:22.163 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;.]
24-04-2020 01:36:22.486 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 01:36:22.486 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 9190 ms
24-04-2020 01:36:24.620 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 01:36:24.943 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
24-04-2020 01:36:25.368 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 01:36:25.527 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 01:36:25.531 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 01:36:26.156 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 01:36:26.781 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 01:36:29.546 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
24-04-2020 01:36:31.370 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
24-04-2020 01:36:32.324 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
24-04-2020 01:36:34.486 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
24-04-2020 01:36:36.417 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
24-04-2020 01:36:36.888 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19e37b2a, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b8304ed, org.springframework.security.web.header.HeaderWriterFilter@7b21668c, org.springframework.web.filter.CorsFilter@611f3f32, org.springframework.security.web.authentication.logout.LogoutFilter@7d480782, com.aroha.pet.security.JwtAuthenticationFilter@1d67b312, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42ebf9fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b7de4d9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77d8edf7, org.springframework.security.web.session.SessionManagementFilter@37e8f762, org.springframework.security.web.access.ExceptionTranslationFilter@2dbb6e95, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d247a25]
24-04-2020 01:36:37.402 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
24-04-2020 01:36:38.759 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
24-04-2020 01:36:38.855 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
24-04-2020 01:36:38.907 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
24-04-2020 01:36:39.877 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
24-04-2020 01:36:39.897 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
24-04-2020 01:36:39.914 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
24-04-2020 01:36:39.921 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
24-04-2020 01:36:39.959 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
24-04-2020 01:36:39.963 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
24-04-2020 01:36:39.986 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
24-04-2020 01:36:40.225 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
24-04-2020 01:36:40.230 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 28.198 seconds (JVM running for 29.501)
24-04-2020 15:52:22.174 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 5876 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 15:52:22.233 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 15:52:22.446 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 15:52:22.448 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 15:52:25.087 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 15:52:25.378 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 277ms. Found 17 repository interfaces.
24-04-2020 15:52:26.360 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$96803c62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.452 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2f2e049c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.467 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.471 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@585fc6a1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.499 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5402a74e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.525 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$7957bf64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.540 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.543 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:26.605 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$16008994] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 15:52:28.406 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 15:52:28.471 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 15:52:28.472 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 15:52:28.506 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;C:\Users\jaydeep\Desktop;;.]
24-04-2020 15:52:28.895 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 15:52:28.895 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 6446 ms
24-04-2020 15:52:30.548 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 15:52:30.871 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
24-04-2020 15:52:31.147 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 15:52:31.312 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 15:52:31.318 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 15:52:31.667 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 15:52:32.028 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 15:52:34.216 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
24-04-2020 15:52:35.751 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
24-04-2020 15:52:36.445 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
24-04-2020 15:52:37.770 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
24-04-2020 15:52:39.202 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
24-04-2020 15:52:39.517 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62c62315, org.springframework.security.web.context.SecurityContextPersistenceFilter@193ea7ef, org.springframework.security.web.header.HeaderWriterFilter@3be44e0c, org.springframework.web.filter.CorsFilter@6c384402, org.springframework.security.web.authentication.logout.LogoutFilter@79db22ed, com.aroha.pet.security.JwtAuthenticationFilter@9408c3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c09ba89, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42d5cfff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@166cd363, org.springframework.security.web.session.SessionManagementFilter@1ee09a81, org.springframework.security.web.access.ExceptionTranslationFilter@742b5916, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@eed1a38]
24-04-2020 15:52:39.934 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
24-04-2020 15:52:40.912 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
24-04-2020 15:52:40.984 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
24-04-2020 15:52:41.055 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
24-04-2020 15:52:41.671 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
24-04-2020 15:52:41.677 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
24-04-2020 15:52:41.689 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
24-04-2020 15:52:41.694 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
24-04-2020 15:52:41.708 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
24-04-2020 15:52:41.711 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
24-04-2020 15:52:41.714 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
24-04-2020 15:52:41.890 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
24-04-2020 15:52:41.902 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 20.954 seconds (JVM running for 21.987)
24-04-2020 15:53:26.479 [http-nio-8080-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-04-2020 15:53:26.480 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-04-2020 15:53:26.531 [http-nio-8080-exec-10] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 51 ms
24-04-2020 15:53:28.314 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:28.422 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:28.908 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:28.912 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:28.972 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:28.975 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:29.014 [http-nio-8080-exec-6] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 15:53:29.019 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 15:53:29.100 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 15:53:29.103 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 15:53:29.199 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:29.220 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 15:53:34.770 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:34.774 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:34.805 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 15:53:37.619 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:37.624 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:37.634 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 15:53:40.571 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:40.575 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:40.581 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 15:53:44.590 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 15:53:49.826 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 15:53:51.753 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 15:53:51.757 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:51.894 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 15:53:51.898 [http-nio-8080-exec-7] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 15:53:51.914 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:51.916 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:52.160 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:53:52.165 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:53:52.185 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 15:54:05.725 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:05.728 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:05.749 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 15:54:05.903 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    update
        users 
    set
        updated_at=?,
        address=?,
        alt_phone_no=?,
        date_of_join=?,
        name=?,
        password=?,
        phone_no=?,
        primary_skills=?,
        secondary_skills=?,
        soe=?,
        soe_ref=? 
    where
        id=?
24-04-2020 15:54:06.104 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:06.107 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:06.115 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 15:54:10.685 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:10.688 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:10.695 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 15:54:13.451 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:13.454 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:13.463 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 15:54:24.887 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:24.888 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:24.889 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:24.891 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:24.897 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 15:54:24.898 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 15:54:25.365 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 15:54:25.368 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 15:54:25.374 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:11:23.519 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:11:25.372 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:11:25.376 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:25.495 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:11:25.498 [http-nio-8080-exec-9] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 16:11:25.514 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:25.516 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:25.832 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:25.835 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:25.842 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:11:29.332 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:29.334 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:29.335 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:29.338 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:29.340 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:11:29.356 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 16:11:29.852 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:29.855 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:29.860 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:11:58.454 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:11:58.607 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:11:58.610 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:58.732 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:11:58.734 [http-nio-8080-exec-2] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 16:11:58.756 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:58.759 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:59.034 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:11:59.037 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:11:59.045 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:12:01.553 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:01.555 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:01.556 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:01.557 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:01.564 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 16:12:01.567 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:12:12.892 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:12.896 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:12.902 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:12:23.332 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:23.335 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:23.340 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:12:23.345 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    update
        users 
    set
        updated_at=?,
        address=?,
        alt_phone_no=?,
        date_of_join=?,
        name=?,
        password=?,
        phone_no=?,
        primary_skills=?,
        secondary_skills=?,
        soe=?,
        soe_ref=? 
    where
        id=?
24-04-2020 16:12:23.524 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:23.529 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:23.536 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:12:25.832 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:25.835 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:25.841 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:12:34.904 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:34.908 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:34.919 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 16:12:34.924 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:34.927 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:34.934 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 16:12:35.104 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.117 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:12:35.122 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.155 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.236 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.288 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.325 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.340 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.343 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:12:35.354 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.358 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:12:35.365 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:12:35.371 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 16:12:40.768 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:40.770 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:40.796 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 16:12:46.186 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:46.189 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:46.192 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:46.197 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
24-04-2020 16:12:46.197 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:46.204 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
24-04-2020 16:12:46.221 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:46.225 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:46.225 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:46.230 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:46.233 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:12:46.236 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:12:48.701 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:48.704 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:48.712 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name  
    FROM
        domain d         
    INNER JOIN
        function_table f                 
            ON d.domain_id = f.domain_id         
    INNER JOIN
        scenario s                 
            ON f.function_id = s.function_id         
    INNER JOIN
        question q                 
            ON s.scenario_id = q.scenario_id         
    INNER JOIN
        java_pojo q1                 
            ON q1.question_id = q.question_id         
    INNER JOIN
        users u                 
            ON u.id = q1.created_by  
    WHERE
        Date(q1.created_at) = Date(?)         
        AND q1.created_by = ?  
    ORDER  BY
        scenario; 
24-04-2020 16:12:50.746 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:50.748 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:50.757 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.javastr,
        c.exceptionstr,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        java_pojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id   
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
24-04-2020 16:12:50.781 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        s.scenario_title,
        c.javastr,
        c.exceptionstr,
        q.question_id,
        c.resultstr,
        c.scenario,
        m.feedback,
        m.mentor_name,
        m.created_at,
        c.created_at as answerDate           
    from
        java_pojo c                            
    inner join
        question q                                          
            on c.question_id=q.question_id                 
    inner join
        scenario s                                         
            on s.scenario_id=q.scenario_id                 
    inner join
        function_table f                                         
            on f.function_id=s.function_id                 
    inner join
        domain d                                         
            on d.domain_id=f.domain_id   
    left join
        mentor_feedback m                                    
            on c.created_at=m.query_date                    
    where
        d.domain_id=?                             
        and DATE(c.created_at)=DATE(?)                             
        and c.created_by=?                
    order by
        scenario;
24-04-2020 16:12:54.104 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:54.105 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:54.107 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:54.107 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:54.111 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
24-04-2020 16:12:54.112 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
24-04-2020 16:12:54.126 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:54.105 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:54.133 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:54.133 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:54.137 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:12:54.144 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:12:56.117 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:12:56.119 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:12:56.124 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        DISTINCT d.domain_id,
        d.domain_name  
    FROM
        domain d         
    INNER JOIN
        function_table f                 
            ON d.domain_id = f.domain_id         
    INNER JOIN
        scenario s                 
            ON f.function_id = s.function_id         
    INNER JOIN
        question q                 
            ON s.scenario_id = q.scenario_id         
    INNER JOIN
        javascript_pojo q1                 
            ON q1.question_id = q.question_id         
    INNER JOIN
        users u                 
            ON u.id = q1.created_by  
    WHERE
        Date(q1.created_at) = Date(?)         
        AND q1.created_by = ?  
    ORDER  BY
        scenario; 
24-04-2020 16:13:00.590 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:13:00.597 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:13:00.613 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
24-04-2020 16:13:00.618 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:13:00.621 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:13:00.638 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
24-04-2020 16:13:00.676 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:13:00.671 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:13:00.680 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:13:00.681 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:13:00.688 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:13:00.688 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:13:05.819 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:13:05.819 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:13:05.821 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:13:05.821 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:13:05.826 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 16:13:05.827 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:14:17.415 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:14:17.419 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:14:17.426 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:14:25.470 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:14:25.472 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:14:25.477 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:15:12.616 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:15:12.619 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:15:12.657 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:15:12.781 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        role0_.id as id1_11_,
        role0_.name as name2_11_ 
    from
        roles role0_ 
    where
        role0_.name=?
24-04-2020 16:15:12.783 [http-nio-8080-exec-4] INFO  c.a.pet.controller.AuthController.registerUser - -----------------------------Iam here--------------
24-04-2020 16:15:12.785 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbinfo0_.id as id1_1_0_,
        dbinfo0_.created_at as created_2_1_0_,
        dbinfo0_.updated_at as updated_3_1_0_,
        dbinfo0_.created_by as created_4_1_0_,
        dbinfo0_.updated_by as updated_5_1_0_,
        dbinfo0_.db_name as db_name6_1_0_,
        dbinfo0_.db_type as db_type7_1_0_,
        dbinfo0_.ip_address as ip_addre8_1_0_,
        dbinfo0_.jdbc_url as jdbc_url9_1_0_,
        dbinfo0_.password as passwor10_1_0_,
        dbinfo0_.port_no as port_no11_1_0_,
        dbinfo0_.schema_name as schema_12_1_0_,
        dbinfo0_.status as status13_1_0_,
        dbinfo0_.user_name as user_na14_1_0_ 
    from
        db_info dbinfo0_ 
    where
        dbinfo0_.id=?
24-04-2020 16:15:12.801 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        users
        (created_at, updated_at, address, alt_phone_no, date_of_join, email, name, password, phone_no, primary_skills, secondary_skills, soe, soe_ref) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 16:15:12.839 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info_users
        (users_id, dbs_id) 
    values
        (?, ?)
24-04-2020 16:15:12.842 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
24-04-2020 16:15:12.899 [http-nio-8080-exec-4] INFO  c.a.pet.controller.AuthController.registerUser - user saved
24-04-2020 16:15:12.927 [http-nio-8080-exec-4] INFO  c.a.pet.controller.AuthController.registerUser - -----------Email is---------jacharjee19@gmail.com
24-04-2020 16:15:17.859 [http-nio-8080-exec-4] INFO  c.a.pet.controller.AuthController.registerUser - --------Email sent to User-------
24-04-2020 16:15:18.037 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:15:18.039 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:15:18.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:19:13.890 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 16:19:14.004 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:19:14.007 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:19:14.121 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 16:19:14.123 [http-nio-8080-exec-5] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 16:19:14.133 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:19:14.135 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:19:14.287 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:19:14.289 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:19:14.295 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:19:17.761 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:19:17.765 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:19:17.771 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 16:19:17.787 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:19:17.790 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:19:17.797 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 16:22:08.436 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:08.439 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:08.435 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:08.441 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:08.444 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 16:22:08.448 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 16:22:08.451 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.455 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:22:08.460 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.468 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.497 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.533 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.566 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.574 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.577 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:22:08.586 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.588 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:22:08.593 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 16:22:08.604 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 16:22:17.175 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:17.178 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:17.184 [http-nio-8080-exec-5] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------3
24-04-2020 16:22:17.185 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 16:22:17.189 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 16:22:25.556 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:25.557 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:25.559 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:25.560 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:25.566 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:22:25.566 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
24-04-2020 16:22:25.568 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:25.572 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 16:22:25.572 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:25.576 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 16:22:25.582 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 16:22:25.582 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
24-04-2020 17:37:18.248 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 2700 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 17:37:18.254 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 17:37:18.378 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 17:37:18.379 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 17:37:22.803 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 17:37:23.178 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 350ms. Found 17 repository interfaces.
24-04-2020 17:37:24.467 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c1662e99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.594 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5a13f6d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.636 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.641 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@70ccf77e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.643 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7ee89985] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.658 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$a43db19b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.669 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.675 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:24.702 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$40e67bcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 17:37:26.886 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 17:37:26.949 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 17:37:26.951 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 17:37:26.991 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;C:\Users\jaydeep\Desktop;;.]
24-04-2020 17:37:27.289 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 17:37:27.290 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 8910 ms
24-04-2020 17:37:29.088 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 17:37:29.727 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
24-04-2020 17:37:30.252 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 17:37:30.501 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 17:37:30.532 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 17:37:30.934 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 17:37:31.526 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 17:37:33.885 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table cpojo (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        cstr longtext,
        error longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (id)
    ) engine=InnoDB
24-04-2020 17:37:34.535 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table db_info (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint,
        updated_by bigint,
        db_name varchar(255),
        db_type varchar(20),
        ip_address varchar(250),
        jdbc_url varchar(150),
        password varchar(255),
        port_no integer not null,
        schema_name varchar(255),
        status varchar(255),
        user_name varchar(255),
        primary key (id)
    ) engine=InnoDB
24-04-2020 17:37:35.478 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table db_info_users (
       users_id bigint not null,
        dbs_id bigint not null,
        primary key (users_id, dbs_id)
    ) engine=InnoDB
24-04-2020 17:37:36.722 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table domain (
       domain_id integer not null auto_increment,
        domain_code varchar(255) not null,
        domain_desc varchar(255) not null,
        domain_name varchar(255) not null,
        domain_website varchar(255) not null,
        technology_id integer,
        primary key (domain_id)
    ) engine=InnoDB
24-04-2020 17:37:38.536 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table function_table (
       function_id integer not null auto_increment,
        business_size double precision not null,
        business_value double precision not null,
        function_desc varchar(255) not null,
        function_name varchar(255) not null,
        domain_id integer,
        primary key (function_id)
    ) engine=InnoDB
24-04-2020 17:37:39.779 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB
24-04-2020 17:37:40.500 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    insert into hibernate_sequence values ( 1 )
24-04-2020 17:37:40.796 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    insert into hibernate_sequence values ( 1 )
24-04-2020 17:37:40.967 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table java_pojo (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        exceptionstr longtext,
        javastr longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (id)
    ) engine=InnoDB
24-04-2020 17:37:41.522 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table javascript_pojo (
       javascript_id bigint not null,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        error longtext,
        javascriptstr longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (javascript_id)
    ) engine=InnoDB
24-04-2020 17:37:42.301 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table mentor_feedback (
       feedback_id integer not null auto_increment,
        created_at datetime,
        error varchar(255),
        exception_str longtext,
        feedback varchar(255),
        learner_id bigint not null,
        learner_name varchar(255),
        mentor_id bigint not null,
        mentor_name varchar(255),
        notification integer not null,
        programing_str longtext,
        query_date varchar(255),
        question varchar(255),
        question_id integer not null,
        resulstr longtext,
        sql_str longtext,
        technology_id integer not null,
        technology_name varchar(255),
        primary key (feedback_id)
    ) engine=InnoDB
24-04-2020 17:37:43.034 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table python_pojo (
       python_id bigint not null,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        error longtext,
        pythonstr longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (python_id)
    ) engine=InnoDB
24-04-2020 17:37:43.681 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table query_info (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint,
        updated_by bigint,
        db_type varchar(255),
        exception_str longtext,
        jdbc_url varchar(255),
        password varchar(255),
        question_id integer not null,
        result_str longtext,
        scenario varchar(255),
        sql_str longtext,
        user_name varchar(255),
        primary key (id)
    ) engine=InnoDB
24-04-2020 17:37:44.134 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table question (
       question_id integer not null auto_increment,
        answer longtext,
        question_desc varchar(255) not null,
        scenario_id integer,
        primary key (question_id)
    ) engine=InnoDB
24-04-2020 17:37:44.546 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table roles (
       id bigint not null auto_increment,
        name varchar(60),
        primary key (id)
    ) engine=InnoDB
24-04-2020 17:37:45.328 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table scenario (
       scenario_id integer not null auto_increment,
        file_name varchar(255),
        image longblob,
        scenario_code varchar(255) not null,
        scenario_desc varchar(255) not null,
        scenario_title varchar(255) not null,
        scenario_type varchar(255) not null,
        function_id integer,
        primary key (scenario_id)
    ) engine=InnoDB
24-04-2020 17:37:46.023 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table technology (
       tech_id integer not null auto_increment,
        technology_name varchar(255),
        primary key (tech_id)
    ) engine=InnoDB
24-04-2020 17:37:46.535 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table user_roles (
       user_id bigint not null,
        role_id bigint not null,
        primary key (user_id, role_id)
    ) engine=InnoDB
24-04-2020 17:37:47.102 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table users (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        address varchar(150),
        alt_phone_no varchar(255),
        date_of_join varchar(255),
        email varchar(40),
        name varchar(40),
        password varchar(100),
        phone_no varchar(40),
        primary_skills varchar(255),
        secondary_skills varchar(255),
        soe varchar(255),
        soe_ref varchar(255),
        primary key (id)
    ) engine=InnoDB
24-04-2020 17:37:47.948 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table roles 
       drop index UK_nb4h0p6txrmfc0xbrd1kglp9t
24-04-2020 17:37:47.995 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table roles 
       add constraint UK_nb4h0p6txrmfc0xbrd1kglp9t unique (name)
24-04-2020 17:37:48.346 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table users 
       drop index UK6dotkott2kjsp8vw4d0m25fb7
24-04-2020 17:37:48.351 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
24-04-2020 17:37:48.958 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table db_info_users 
       add constraint FKquqmfkux12tx18e8cb4wk3lue 
       foreign key (dbs_id) 
       references db_info (id)
24-04-2020 17:37:53.762 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table db_info_users 
       add constraint FK9ilfci0erxxaxuy715fe8gyrf 
       foreign key (users_id) 
       references users (id)
24-04-2020 17:37:56.391 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table domain 
       add constraint FK7dmp5hhi00had3u55oky8oamj 
       foreign key (technology_id) 
       references technology (tech_id)
24-04-2020 17:37:58.226 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table function_table 
       add constraint FKlbsqp09k3a1c4ugs9avv310sm 
       foreign key (domain_id) 
       references domain (domain_id)
24-04-2020 17:37:59.770 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table question 
       add constraint FK36m1yaxo1nbkf8im9qjxnpym5 
       foreign key (scenario_id) 
       references scenario (scenario_id)
24-04-2020 17:38:01.723 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table scenario 
       add constraint FK8srjotalk6pu4bunp2mluvch5 
       foreign key (function_id) 
       references function_table (function_id)
24-04-2020 17:38:03.883 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles (id)
24-04-2020 17:38:10.551 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users (id)
24-04-2020 17:38:13.841 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
24-04-2020 17:38:15.580 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
24-04-2020 17:38:16.992 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
24-04-2020 17:38:18.952 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
24-04-2020 17:38:21.066 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
24-04-2020 17:38:21.363 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d3a2b96, org.springframework.security.web.context.SecurityContextPersistenceFilter@76fbfb62, org.springframework.security.web.header.HeaderWriterFilter@583adbc6, org.springframework.web.filter.CorsFilter@79870718, org.springframework.security.web.authentication.logout.LogoutFilter@61a04d0e, com.aroha.pet.security.JwtAuthenticationFilter@6639aadb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c08d0f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2244d1b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9944545, org.springframework.security.web.session.SessionManagementFilter@5e8b1711, org.springframework.security.web.access.ExceptionTranslationFilter@4842e107, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d5483df]
24-04-2020 17:38:22.446 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
24-04-2020 17:38:23.773 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
24-04-2020 17:38:23.821 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
24-04-2020 17:38:23.910 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
24-04-2020 17:38:24.667 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
24-04-2020 17:38:24.682 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
24-04-2020 17:38:24.699 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
24-04-2020 17:38:24.708 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
24-04-2020 17:38:24.732 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
24-04-2020 17:38:24.737 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
24-04-2020 17:38:24.740 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
24-04-2020 17:38:24.945 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
24-04-2020 17:38:24.951 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 67.73 seconds (JVM running for 72.172)
24-04-2020 17:39:58.007 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-04-2020 17:39:58.011 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-04-2020 17:39:58.131 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 119 ms
24-04-2020 17:40:00.377 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:00.481 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:01.150 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:01.156 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:01.319 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 17:40:06.561 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:06.564 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:06.565 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:06.569 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:06.576 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 17:40:06.606 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 17:40:18.585 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:18.588 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:18.666 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:40:23.044 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:23.047 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:23.055 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:40:28.787 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:28.791 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:28.801 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:40:38.672 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:38.675 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:38.684 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:40:40.403 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:40.404 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:40.407 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:40.408 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:40.413 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:40:40.413 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:40:40.437 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:40:40.440 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:40:40.448 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 17:40:40.460 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.technology_id as technolo6_3_0_,
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_id as domain_i1_3_1_,
        domain0_.domain_code as domain_c2_3_1_,
        domain0_.domain_desc as domain_d3_3_1_,
        domain0_.domain_name as domain_n4_3_1_,
        domain0_.domain_website as domain_w5_3_1_,
        domain0_.technology_id as technolo6_3_1_ 
    from
        domain domain0_ 
    where
        domain0_.technology_id=?
24-04-2020 17:40:40.537 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        domain
        (domain_code, domain_desc, domain_name, domain_website, technology_id) 
    values
        (?, ?, ?, ?, ?)
24-04-2020 17:40:40.636 [http-nio-8080-exec-7] INFO  com.aroha.pet.service.DomainService.saveDomain - Domain saved
24-04-2020 17:41:06.209 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:06.212 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:06.223 [http-nio-8080-exec-9] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 17:41:06.227 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 17:41:06.233 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:41:18.863 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:18.866 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:18.875 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:22.305 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:22.308 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:22.314 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:28.049 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:28.055 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:28.064 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:33.496 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:33.500 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:33.507 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:46.260 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:46.263 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:46.271 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:47.696 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:47.696 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:47.700 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:47.702 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:47.707 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:47.710 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
24-04-2020 17:41:47.727 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:41:47.731 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:41:47.738 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 17:41:47.753 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        function_table
        (business_size, business_value, domain_id, function_desc, function_name) 
    values
        (?, ?, ?, ?, ?)
24-04-2020 17:41:47.830 [http-nio-8080-exec-1] INFO  c.aroha.pet.service.FunctionService.createFunction - function saved successfully
24-04-2020 17:42:06.109 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:42:06.112 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:42:06.117 [http-nio-8080-exec-2] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 17:42:06.120 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 17:42:06.124 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:42:07.275 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:42:07.279 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:42:07.289 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 17:42:07.295 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 17:42:17.278 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:42:17.281 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:42:17.288 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 17:42:26.576 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:42:26.580 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:42:26.587 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 17:42:36.077 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:42:36.080 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:42:36.089 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 17:42:47.490 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:42:47.493 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:42:47.499 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 17:43:19.973 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:19.975 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:19.978 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:19.987 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 17:43:19.995 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:20.005 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 17:43:20.061 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:20.065 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:20.099 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 17:43:20.106 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 17:43:20.117 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        scenario
        (file_name, function_id, image, scenario_code, scenario_desc, scenario_title, scenario_type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
24-04-2020 17:43:20.486 [http-nio-8080-exec-5] INFO  c.aroha.pet.service.ScenarioService.createScenario - Scenario saved successfully
24-04-2020 17:43:36.830 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:36.832 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:36.838 [http-nio-8080-exec-4] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 17:43:36.840 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 17:43:36.844 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 17:43:37.900 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:37.904 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:37.910 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 17:43:37.913 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 17:43:38.891 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:38.894 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:38.905 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 17:43:38.917 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 17:43:50.684 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:43:50.687 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:43:50.694 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:44:04.791 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:44:04.794 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:44:04.799 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:44:15.113 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:44:15.118 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:44:15.124 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:44:27.925 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:44:27.929 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:44:27.934 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:44:44.811 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:44:44.814 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:44:44.823 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:44:49.688 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:44:49.692 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:44:49.697 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:46:02.211 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:46:02.215 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:46:02.221 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:48:31.282 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:48:31.286 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:48:31.295 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:48:32.274 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:48:32.278 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:48:32.283 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:48:33.250 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:48:33.253 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:48:33.260 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:51:44.178 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:51:44.182 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:51:44.191 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 17:51:53.709 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 17:51:53.712 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 17:51:53.719 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:03:34.316 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarting - Starting PetApplication on LAPTOP-7VFDP9Q8 with PID 12268 (F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa\target\classes started by jaydeep in F:\PetArohaGitHub\ProductivityTesting\pet-app-jpa)
24-04-2020 18:03:34.322 [restartedMain] INFO  com.aroha.pet.PetApplication.logStartupProfileInfo - No active profile set, falling back to default profiles: default
24-04-2020 18:03:34.446 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
24-04-2020 18:03:34.447 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
24-04-2020 18:03:38.622 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
24-04-2020 18:03:39.004 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 364ms. Found 17 repository interfaces.
24-04-2020 18:03:40.722 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48b7bfd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.853 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e165880c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.867 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.870 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2a0d6e87' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.885 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$63a2abe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.906 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2b8f42d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.919 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.921 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:40.974 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c8380d04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
24-04-2020 18:03:43.070 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
24-04-2020 18:03:43.135 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-04-2020 18:03:43.136 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
24-04-2020 18:03:43.170 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_221\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_221/bin/../jre/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_221\bin;C:\Progams\apache-maven-3.6.1\bin;C:\Progams\apache-ant-1.9.14\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;F:\oracle\product\10.2.0\db_1\bin;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\TDM-GCC-64\bin;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\jaydeep\AppData\Local\Programs\Python\Python38-32\;C:\Program Files\JetBrains\WebStorm 2019.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.1.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Educational Edition 2019.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin;;C:\Users\jaydeep\AppData\Roaming\npm;C:\Users\jaydeep\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\jaydeep\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm 2020.1\bin;;C:\Users\jaydeep\Desktop;;.]
24-04-2020 18:03:43.485 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
24-04-2020 18:03:43.486 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 9039 ms
24-04-2020 18:03:45.446 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
24-04-2020 18:03:45.891 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
24-04-2020 18:03:46.270 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
24-04-2020 18:03:46.435 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
24-04-2020 18:03:46.439 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
24-04-2020 18:03:46.730 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
24-04-2020 18:03:47.148 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
24-04-2020 18:03:50.330 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
24-04-2020 18:03:52.106 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
24-04-2020 18:03:53.214 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
24-04-2020 18:03:55.413 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
24-04-2020 18:03:57.623 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
24-04-2020 18:03:57.983 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@74f357db, org.springframework.security.web.context.SecurityContextPersistenceFilter@1506e3e8, org.springframework.security.web.header.HeaderWriterFilter@c4fbc04, org.springframework.web.filter.CorsFilter@131d2694, org.springframework.security.web.authentication.logout.LogoutFilter@67035eef, com.aroha.pet.security.JwtAuthenticationFilter@5a38c12d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d538a9d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@380028f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9512347, org.springframework.security.web.session.SessionManagementFilter@d9fb3f3, org.springframework.security.web.access.ExceptionTranslationFilter@5a7b57ac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1cd84912]
24-04-2020 18:03:58.515 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
24-04-2020 18:04:00.105 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
24-04-2020 18:04:00.165 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
24-04-2020 18:04:00.247 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
24-04-2020 18:04:01.125 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
24-04-2020 18:04:01.129 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
24-04-2020 18:04:01.142 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
24-04-2020 18:04:01.148 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
24-04-2020 18:04:01.211 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
24-04-2020 18:04:01.216 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
24-04-2020 18:04:01.219 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
24-04-2020 18:04:01.534 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
24-04-2020 18:04:01.541 [restartedMain] INFO  com.aroha.pet.PetApplication.logStarted - Started PetApplication in 28.151 seconds (JVM running for 29.306)
24-04-2020 18:04:21.847 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-04-2020 18:04:21.848 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-04-2020 18:04:21.889 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 41 ms
24-04-2020 18:04:22.846 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:22.914 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:23.250 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:04:23.259 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:23.443 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:04:23.445 [http-nio-8080-exec-1] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 18:04:23.493 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:23.497 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:23.993 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:24.000 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:24.255 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:04:30.722 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:30.728 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:30.728 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:30.731 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:30.738 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:04:30.746 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:04:33.938 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:33.943 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:33.958 [http-nio-8080-exec-6] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:04:33.961 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:04:33.970 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:04:35.128 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:35.149 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:35.208 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:04:35.212 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:04:36.943 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:04:36.946 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:04:36.956 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 18:04:36.967 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:06:20.111 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:20.114 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:20.124 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:06:23.260 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:23.264 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:23.269 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:06:24.397 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:24.401 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:24.409 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:06:45.729 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:06:45.842 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:06:45.845 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:45.967 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:06:45.969 [http-nio-8080-exec-6] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 18:06:45.984 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:45.986 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:46.342 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:46.346 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:46.353 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:06:53.362 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:53.362 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:53.366 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:53.366 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:53.371 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:06:53.372 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:06:56.824 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:56.827 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:56.833 [http-nio-8080-exec-6] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:06:56.835 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:06:56.839 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:06:58.892 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:58.895 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:58.903 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:06:58.905 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:06:59.814 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:06:59.817 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:06:59.826 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 18:06:59.830 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:07:21.169 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:21.172 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:21.181 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:07:22.521 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:22.524 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:22.525 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:22.528 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:22.531 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:07:22.534 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:07:22.568 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:22.571 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:22.595 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:07:22.600 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:07:22.606 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:07:22.612 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        functions0_.domain_id as domain_i6_4_0_,
        functions0_.function_id as function1_4_0_,
        functions0_.function_id as function1_4_1_,
        functions0_.business_size as business2_4_1_,
        functions0_.business_value as business3_4_1_,
        functions0_.domain_id as domain_i6_4_1_,
        functions0_.function_desc as function4_4_1_,
        functions0_.function_name as function5_4_1_ 
    from
        function_table functions0_ 
    where
        functions0_.domain_id=?
24-04-2020 18:07:22.614 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.function_id as function8_12_0_,
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.scenario_id as scenario1_12_1_,
        scenario0_.file_name as file_nam2_12_1_,
        scenario0_.function_id as function8_12_1_,
        scenario0_.image as image3_12_1_,
        scenario0_.scenario_code as scenario4_12_1_,
        scenario0_.scenario_desc as scenario5_12_1_,
        scenario0_.scenario_title as scenario6_12_1_,
        scenario0_.scenario_type as scenario7_12_1_ 
    from
        scenario scenario0_ 
    where
        scenario0_.function_id=?
24-04-2020 18:07:22.617 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        ques0_.scenario_id as scenario4_10_0_,
        ques0_.question_id as question1_10_0_,
        ques0_.question_id as question1_10_1_,
        ques0_.answer as answer2_10_1_,
        ques0_.question_desc as question3_10_1_,
        ques0_.scenario_id as scenario4_10_1_ 
    from
        question ques0_ 
    where
        ques0_.scenario_id=?
24-04-2020 18:07:22.656 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        question
        (answer, question_desc, scenario_id) 
    values
        (?, ?, ?)
24-04-2020 18:07:22.723 [http-nio-8080-exec-6] INFO  c.aroha.pet.service.QuestionService.createQuestion - Question saved successfully
24-04-2020 18:07:22.823 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:22.828 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:22.834 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:07:22.839 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:07:22.844 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:07:22.871 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:07:35.716 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:35.719 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:35.724 [http-nio-8080-exec-9] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:07:35.728 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:07:35.732 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:07:36.779 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:36.782 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:36.788 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:07:36.792 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:07:37.812 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:37.816 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:37.823 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 18:07:37.828 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:07:38.746 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:38.749 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:38.759 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_10_,
        question0_.answer as answer2_10_,
        question0_.question_desc as question3_10_,
        question0_.scenario_id as scenario4_10_ 
    from
        question question0_
24-04-2020 18:07:38.764 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:07:38.769 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:07:42.318 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:42.321 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:42.329 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:07:42.331 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:07:42.337 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        ques0_.scenario_id as scenario4_10_0_,
        ques0_.question_id as question1_10_0_,
        ques0_.question_id as question1_10_1_,
        ques0_.answer as answer2_10_1_,
        ques0_.question_desc as question3_10_1_,
        ques0_.scenario_id as scenario4_10_1_ 
    from
        question ques0_ 
    where
        ques0_.scenario_id=?
24-04-2020 18:07:42.351 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    delete 
    from
        question 
    where
        question_id=?
24-04-2020 18:07:42.370 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    delete 
    from
        scenario 
    where
        scenario_id=?
24-04-2020 18:07:42.546 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:42.549 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:42.554 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:07:42.555 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:07:42.567 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:07:42.575 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver.logException - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<?> com.aroha.pet.controller.DomainController.getAllScenarios(com.aroha.pet.payload.DomainRequest)]
24-04-2020 18:08:12.867 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:08:12.997 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:08:13.000 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:13.120 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:08:13.122 [http-nio-8080-exec-9] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 18:08:13.135 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:13.138 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:13.363 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:13.366 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:13.372 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:08:16.082 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:16.084 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:16.085 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:16.086 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:16.093 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:08:16.094 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:08:22.301 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:22.305 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:22.312 [http-nio-8080-exec-5] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:08:22.314 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:08:22.319 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:08:23.522 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:23.527 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:23.533 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:08:23.535 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:08:24.348 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:24.351 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:24.356 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 18:08:31.623 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:31.627 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:31.632 [http-nio-8080-exec-6] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:08:31.634 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:08:31.637 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:08:37.073 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:37.077 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:37.083 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:08:37.085 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:08:47.500 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:47.502 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:47.510 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 18:08:55.202 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:55.204 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:55.209 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 18:08:58.836 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:08:58.838 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:08:58.844 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 18:09:06.404 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:06.406 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:06.413 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 18:09:11.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:11.046 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:11.048 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:11.049 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:11.053 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 18:09:11.055 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
24-04-2020 18:09:11.097 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:11.099 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:11.116 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:09:11.122 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:09:11.135 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        scenario
        (file_name, function_id, image, scenario_code, scenario_desc, scenario_title, scenario_type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:09:11.216 [http-nio-8080-exec-7] INFO  c.aroha.pet.service.ScenarioService.createScenario - Scenario saved successfully
24-04-2020 18:09:20.593 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:20.595 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:20.597 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:20.598 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:20.606 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:09:20.600 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:20.616 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:20.623 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:09:23.457 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:23.461 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:23.465 [http-nio-8080-exec-10] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:09:23.467 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:09:23.471 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:09:26.135 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:26.138 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:26.145 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:09:26.147 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:09:27.164 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:27.167 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:27.172 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 18:09:27.176 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:09:39.762 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:39.765 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:39.772 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:09:39.917 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:39.918 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:39.919 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:39.921 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:39.927 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:09:39.929 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
24-04-2020 18:09:39.996 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:39.999 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:40.010 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:09:40.014 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:09:40.019 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:09:40.022 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        functions0_.domain_id as domain_i6_4_0_,
        functions0_.function_id as function1_4_0_,
        functions0_.function_id as function1_4_1_,
        functions0_.business_size as business2_4_1_,
        functions0_.business_value as business3_4_1_,
        functions0_.domain_id as domain_i6_4_1_,
        functions0_.function_desc as function4_4_1_,
        functions0_.function_name as function5_4_1_ 
    from
        function_table functions0_ 
    where
        functions0_.domain_id=?
24-04-2020 18:09:40.025 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.function_id as function8_12_0_,
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.scenario_id as scenario1_12_1_,
        scenario0_.file_name as file_nam2_12_1_,
        scenario0_.function_id as function8_12_1_,
        scenario0_.image as image3_12_1_,
        scenario0_.scenario_code as scenario4_12_1_,
        scenario0_.scenario_desc as scenario5_12_1_,
        scenario0_.scenario_title as scenario6_12_1_,
        scenario0_.scenario_type as scenario7_12_1_ 
    from
        scenario scenario0_ 
    where
        scenario0_.function_id=?
24-04-2020 18:09:40.028 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        ques0_.scenario_id as scenario4_10_0_,
        ques0_.question_id as question1_10_0_,
        ques0_.question_id as question1_10_1_,
        ques0_.answer as answer2_10_1_,
        ques0_.question_desc as question3_10_1_,
        ques0_.scenario_id as scenario4_10_1_ 
    from
        question ques0_ 
    where
        ques0_.scenario_id=?
24-04-2020 18:09:40.031 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        question
        (answer, question_desc, scenario_id) 
    values
        (?, ?, ?)
24-04-2020 18:09:40.105 [http-nio-8080-exec-7] INFO  c.aroha.pet.service.QuestionService.createQuestion - Question saved successfully
24-04-2020 18:09:40.206 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:40.209 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:40.215 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:09:40.217 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:09:40.219 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:09:40.223 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id      
    FROM
        (SELECT
            d.domain_id ,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid            
        FROM
            domain d          
        LEFT JOIN
            function_table f                  
                ON d.domain_id = f.domain_id          
        left JOIN
            scenario s                  
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid ,
                q.question_desc          
        FROM
            question q )b       
    WHERE
        a.sid=b.sid;
24-04-2020 18:09:48.862 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:48.864 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:48.873 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:09:48.888 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:48.891 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:48.899 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 18:09:58.941 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:09:58.943 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:09:58.948 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:10:24.896 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:10:24.898 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:10:24.905 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:10:24.913 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 18:10:50.923 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:10:50.927 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:10:51.068 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info
        (created_at, updated_at, created_by, updated_by, db_name, db_type, ip_address, jdbc_url, password, port_no, schema_name, status, user_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:10:51.136 [http-nio-8080-exec-8] INFO  c.a.p.c.DataBaseInfoController.saveDbDetails - Database saved successfully
24-04-2020 18:10:51.138 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:10:51.141 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:10:51.216 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info_users
        (users_id, dbs_id) 
    values
        (?, ?)
24-04-2020 18:10:51.270 [http-nio-8080-exec-8] INFO  c.a.p.c.DataBaseInfoController.saveDbDetails - Database saved successfully for useradmin@aroha.co.in
24-04-2020 18:10:51.352 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:10:51.355 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:10:51.360 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:10:51.363 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 18:10:51.931 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:10:51.933 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:10:51.937 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:10:51.939 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 18:10:58.065 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:10:58.067 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:10:58.073 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:10:58.075 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:10:58.082 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:10:58.086 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
24-04-2020 18:11:09.886 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:11:09.888 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:11:09.893 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:11:58.464 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:11:58.467 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:11:58.516 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:11:58.641 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        role0_.id as id1_11_,
        role0_.name as name2_11_ 
    from
        roles role0_ 
    where
        role0_.name=?
24-04-2020 18:11:58.644 [http-nio-8080-exec-6] INFO  c.a.pet.controller.AuthController.registerUser - -----------------------------Iam here--------------
24-04-2020 18:11:58.646 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbinfo0_.id as id1_1_0_,
        dbinfo0_.created_at as created_2_1_0_,
        dbinfo0_.updated_at as updated_3_1_0_,
        dbinfo0_.created_by as created_4_1_0_,
        dbinfo0_.updated_by as updated_5_1_0_,
        dbinfo0_.db_name as db_name6_1_0_,
        dbinfo0_.db_type as db_type7_1_0_,
        dbinfo0_.ip_address as ip_addre8_1_0_,
        dbinfo0_.jdbc_url as jdbc_url9_1_0_,
        dbinfo0_.password as passwor10_1_0_,
        dbinfo0_.port_no as port_no11_1_0_,
        dbinfo0_.schema_name as schema_12_1_0_,
        dbinfo0_.status as status13_1_0_,
        dbinfo0_.user_name as user_na14_1_0_ 
    from
        db_info dbinfo0_ 
    where
        dbinfo0_.id=?
24-04-2020 18:11:58.661 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        users
        (created_at, updated_at, address, alt_phone_no, date_of_join, email, name, password, phone_no, primary_skills, secondary_skills, soe, soe_ref) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:11:58.680 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info_users
        (users_id, dbs_id) 
    values
        (?, ?)
24-04-2020 18:11:58.681 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
24-04-2020 18:11:58.894 [http-nio-8080-exec-6] INFO  c.a.pet.controller.AuthController.registerUser - user saved
24-04-2020 18:11:58.920 [http-nio-8080-exec-6] INFO  c.a.pet.controller.AuthController.registerUser - -----------Email is---------jacharjee19@gmail.com
24-04-2020 18:12:04.485 [http-nio-8080-exec-6] INFO  c.a.pet.controller.AuthController.registerUser - --------Email sent to User-------
24-04-2020 18:12:04.594 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:04.596 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:04.602 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:12:44.278 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:12:46.467 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:12:46.470 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:46.589 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:12:46.591 [http-nio-8080-exec-3] INFO  c.a.pet.controller.AuthController.authenticateUser - Jaydeep logged in successfully
24-04-2020 18:12:46.600 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:46.602 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:46.784 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:46.786 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:46.790 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:46.791 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:12:46.794 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:46.795 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:46.798 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:12:46.802 [http-nio-8080-exec-4] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:12:46.806 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:12:46.811 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:12:49.225 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:49.229 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:49.438 [http-nio-8080-exec-5] INFO  com.aroha.pet.service.DBService.getMySqlTableList - Mysql show  table list connection successfully
24-04-2020 18:12:52.166 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:52.169 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:52.174 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
24-04-2020 18:12:52.177 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_13_1_,
        technology1_.technology_name as technolo2_13_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
24-04-2020 18:12:53.095 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:53.097 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:53.103 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_,
        scenario0_.file_name as file_nam2_12_,
        scenario0_.function_id as function8_12_,
        scenario0_.image as image3_12_,
        scenario0_.scenario_code as scenario4_12_,
        scenario0_.scenario_desc as scenario5_12_,
        scenario0_.scenario_title as scenario6_12_,
        scenario0_.scenario_type as scenario7_12_ 
    from
        scenario scenario0_
24-04-2020 18:12:53.105 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_13_2_,
        technology2_.technology_name as technolo2_13_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
24-04-2020 18:12:56.030 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:56.032 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:56.038 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_10_,
        question0_.answer as answer2_10_,
        question0_.question_desc as question3_10_,
        question0_.scenario_id as scenario4_10_ 
    from
        question question0_
24-04-2020 18:12:56.039 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:12:56.040 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:12:56.045 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:12:56.045 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:12:56.052 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_12_0_,
        scenario0_.file_name as file_nam2_12_0_,
        scenario0_.function_id as function8_12_0_,
        scenario0_.image as image3_12_0_,
        scenario0_.scenario_code as scenario4_12_0_,
        scenario0_.scenario_desc as scenario5_12_0_,
        scenario0_.scenario_title as scenario6_12_0_,
        scenario0_.scenario_type as scenario7_12_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
24-04-2020 18:12:56.055 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:12:56.087 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at java.util.Base64$Encoder.encode(Base64.java:261)
	at com.aroha.pet.controller.DomainController.getScenario(DomainController.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
24-04-2020 18:13:13.653 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:13:13.656 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:13:13.690 [http-nio-8080-exec-2] INFO  com.aroha.pet.service.DBService.getTableColumnList - Get table column list connection sucessfully
24-04-2020 18:13:14.821 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:13:14.822 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:13:14.849 [http-nio-8080-exec-4] INFO  com.aroha.pet.service.DBService.getTableColumnList - Get table column list connection sucessfully
24-04-2020 18:13:18.404 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:13:18.407 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:13:18.436 [http-nio-8080-exec-5] INFO  com.aroha.pet.service.DBService.getTableColumnList - Get table column list connection sucessfully
24-04-2020 18:13:21.892 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:13:21.894 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:13:21.916 [http-nio-8080-exec-7] INFO  com.aroha.pet.service.DBService.getTableColumnList - Get table column list connection sucessfully
24-04-2020 18:13:23.777 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:13:23.779 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:13:23.803 [http-nio-8080-exec-8] INFO  com.aroha.pet.service.DBService.getTableColumnList - Get table column list connection sucessfully
24-04-2020 18:13:35.957 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:13:35.960 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:13:35.983 [http-nio-8080-exec-9] INFO  com.aroha.pet.service.DBService.getTableColumnList - Get table column list connection sucessfully
24-04-2020 18:14:10.876 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:10.878 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:10.912 [http-nio-8080-exec-10] INFO  com.aroha.pet.service.DBService.executeQuery - Database connected successfully
24-04-2020 18:14:10.946 [http-nio-8080-exec-10] ERROR com.aroha.pet.service.DBService.executeQuery - Database connection failedTable 'mysql.users' doesn't exist
24-04-2020 18:14:10.949 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        COUNT(*) 
    FROM
        query_info q 
    WHERE
        DATE(q.created_at)=DATE(?) 
        AND q.created_by=? 
        AND q.sql_str=?  
        AND q.question_id=?
24-04-2020 18:14:10.985 [http-nio-8080-exec-10] INFO  c.aroha.pet.service.QueryInfoService.checkDuplicateQuery - -------------Flag-------false
24-04-2020 18:14:11.008 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        query_info
        (created_at, updated_at, created_by, updated_by, db_type, exception_str, jdbc_url, password, question_id, result_str, scenario, sql_str, user_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:14:28.895 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:28.897 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:28.923 [http-nio-8080-exec-2] INFO  com.aroha.pet.service.DBService.executeQuery - Database connected successfully
24-04-2020 18:14:28.938 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        COUNT(*) 
    FROM
        query_info q 
    WHERE
        DATE(q.created_at)=DATE(?) 
        AND q.created_by=? 
        AND q.sql_str=?  
        AND q.question_id=?
24-04-2020 18:14:28.939 [http-nio-8080-exec-2] INFO  c.aroha.pet.service.QueryInfoService.checkDuplicateQuery - -------------Flag-------false
24-04-2020 18:14:28.941 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        query_info
        (created_at, updated_at, created_by, updated_by, db_type, exception_str, jdbc_url, password, question_id, result_str, scenario, sql_str, user_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:14:35.371 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:35.373 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:35.380 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:14:45.187 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:14:45.320 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:14:45.322 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:45.444 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:14:45.447 [http-nio-8080-exec-5] INFO  c.a.pet.controller.AuthController.authenticateUser - Admin logged in successfully
24-04-2020 18:14:45.456 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:45.457 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:45.609 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:45.611 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:45.617 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
24-04-2020 18:14:48.291 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:48.294 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:48.297 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:48.301 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:48.301 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity        
    FROM
        users u       
    LEFT JOIN
        query_info q               
            ON u.id=q.created_by         
    left join
        user_roles r               
            on u.id=r.user_id       
    WHERE
        r.role_id=1        
    GROUP BY
        u.id,
        DAY(q.created_at)        
    having
        count(distinct q.scenario)>0   
    ORDER BY
        created_at Desc;  
24-04-2020 18:14:48.318 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        java_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 18:14:48.323 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:48.327 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:48.326 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:48.330 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:48.333 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                  
    FROM
        users u                 
    LEFT JOIN
        javascript_pojo q                                         
            ON u.id=q.created_by                   
    left join
        user_roles r                                         
            on u.id=r.user_id                 
    WHERE
        r.role_id =1                  
    GROUP BY
        u.id,
        DAY(q.created_at)                  
    having
        count(distinct q.scenario)>0     
    ORDER BY
        created_at Desc;
24-04-2020 18:14:48.339 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                   
    FROM
        users u                  
    LEFT JOIN
        cpojo q                                          
            ON u.id=q.created_by                    
    left join
        user_roles r                                          
            on u.id=r.user_id                  
    WHERE
        r.role_id =1                   
    GROUP BY
        u.id,
        DAY(q.created_at)                   
    having
        count(distinct q.scenario)>0      
    ORDER BY
        created_at Desc;
24-04-2020 18:14:50.146 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:50.148 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:50.167 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
24-04-2020 18:14:52.004 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:14:52.007 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:14:52.015 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
24-04-2020 18:15:04.474 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:04.481 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:04.485 [http-nio-8080-exec-1] INFO  c.aroha.pet.service.FeedBackService.saveFeedback - ----------queryInfo2
24-04-2020 18:15:04.487 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        query_info 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
24-04-2020 18:15:04.490 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:04.495 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:15:04.499 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
24-04-2020 18:15:04.536 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:15:23.352 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:23.355 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:23.359 [http-nio-8080-exec-2] INFO  c.aroha.pet.service.FeedBackService.saveFeedback - ----------queryInfo2
24-04-2020 18:15:23.362 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        query_info 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
24-04-2020 18:15:23.366 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:23.369 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:15:23.372 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
24-04-2020 18:15:23.375 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
24-04-2020 18:15:26.529 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:26.553 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:26.598 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
24-04-2020 18:15:44.012 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
24-04-2020 18:15:44.103 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:15:44.105 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:44.219 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_,
        user0_.created_at as created_2_15_,
        user0_.updated_at as updated_3_15_,
        user0_.address as address4_15_,
        user0_.alt_phone_no as alt_phon5_15_,
        user0_.date_of_join as date_of_6_15_,
        user0_.email as email7_15_,
        user0_.name as name8_15_,
        user0_.password as password9_15_,
        user0_.phone_no as phone_n10_15_,
        user0_.primary_skills as primary11_15_,
        user0_.secondary_skills as seconda12_15_,
        user0_.soe as soe13_15_,
        user0_.soe_ref as soe_ref14_15_ 
    from
        users user0_ 
    where
        user0_.email=?
24-04-2020 18:15:44.221 [http-nio-8080-exec-4] INFO  c.a.pet.controller.AuthController.authenticateUser - Jaydeep logged in successfully
24-04-2020 18:15:44.229 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:44.231 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:44.346 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:44.348 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:44.352 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:15:44.353 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:44.355 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:44.355 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:44.358 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:15:44.358 [http-nio-8080-exec-6] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:15:44.360 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:15:44.392 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:15:47.333 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:47.335 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:47.340 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:15:50.529 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:15:50.531 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:15:50.537 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 18:16:02.885 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:16:02.887 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:16:03.170 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:16:03.172 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:16:03.176 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:16:03.179 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:16:03.179 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:16:03.182 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:16:03.184 [http-nio-8080-exec-5] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:16:03.187 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:16:03.189 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:16:03.197 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:16:14.449 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:16:14.452 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:16:14.462 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:16:22.224 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:16:22.226 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:16:22.231 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 18:21:26.136 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:26.139 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:26.438 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:26.440 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:26.442 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:26.447 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:26.447 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:21:26.449 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:26.450 [http-nio-8080-exec-10] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:21:26.452 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:21:26.452 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:21:26.456 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:21:32.227 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:32.230 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:32.237 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:21:38.500 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:38.502 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:38.507 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 18:21:51.002 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:51.005 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:51.566 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:51.569 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:51.573 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:21:51.575 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:51.576 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:51.577 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:51.580 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:21:51.582 [http-nio-8080-exec-7] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:21:51.584 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:21:51.603 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:21:57.341 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:21:57.344 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:21:57.351 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:22:08.029 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:08.032 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:22:08.037 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 18:22:20.872 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:20.874 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:20.875 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:22:20.878 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:22:20.884 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:22:20.887 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:20.889 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:20.890 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:22:20.891 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:22:20.900 [http-nio-8080-exec-10] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:22:20.902 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:22:20.905 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:22:30.895 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:30.898 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:22:30.902 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:22:38.163 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:22:38.167 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:22:38.172 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
24-04-2020 18:25:32.437 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:25:32.440 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:25:32.696 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:25:32.699 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:25:32.705 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
24-04-2020 18:25:32.708 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:25:32.708 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:25:32.710 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:25:32.711 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
24-04-2020 18:25:32.718 [http-nio-8080-exec-1] INFO  c.a.pet.controller.DomainController.getDomainData - ------------------1
24-04-2020 18:25:32.719 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_0_,
        technology0_.technology_name as technolo2_13_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
24-04-2020 18:25:32.723 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
24-04-2020 18:25:51.405 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:25:51.408 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:25:51.414 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_13_,
        technology0_.technology_name as technolo2_13_ 
    from
        technology technology0_
24-04-2020 18:26:06.387 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_15_0_,
        user0_.created_at as created_2_15_0_,
        user0_.updated_at as updated_3_15_0_,
        user0_.address as address4_15_0_,
        user0_.alt_phone_no as alt_phon5_15_0_,
        user0_.date_of_join as date_of_6_15_0_,
        user0_.email as email7_15_0_,
        user0_.name as name8_15_0_,
        user0_.password as password9_15_0_,
        user0_.phone_no as phone_n10_15_0_,
        user0_.primary_skills as primary11_15_0_,
        user0_.secondary_skills as seconda12_15_0_,
        user0_.soe as soe13_15_0_,
        user0_.soe_ref as soe_ref14_15_0_ 
    from
        users user0_ 
    where
        user0_.id=?
24-04-2020 18:26:06.390 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_14_0_,
        roles0_.role_id as role_id2_14_0_,
        role1_.id as id1_11_1_,
        role1_.name as name2_11_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
24-04-2020 18:26:06.395 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
